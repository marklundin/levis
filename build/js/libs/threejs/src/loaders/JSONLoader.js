THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,o){var n=new XMLHttpRequest,a=0;n.onreadystatechange=function(){if(n.readyState===n.DONE)if(200===n.status||0===n.status){if(n.responseText){var s=JSON.parse(n.responseText),l=e.parse(s,r);i(l.geometry,l.materials)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+n.status+"]");else n.readyState===n.LOADING?o&&(0===a&&(a=n.getResponseHeader("Content-Length")),o({total:a,loaded:n.responseText.length})):n.readyState===n.HEADERS_RECEIVED&&void 0!==o&&(a=n.getResponseHeader("Content-Length"))},n.open("GET",t,!0),n.withCredentials=this.withCredentials,n.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){function i(t){function i(e,t){return e&1<<t}var r,o,a,s,l,c,h,u,d,p,f,m,v,g,E,y,T,x,b,_,R,w,H,S,M,C,A,D=e.faces,P=e.vertices,L=e.normals,N=e.colors,F=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&F++;for(r=0;F>r;r++)n.faceUvs[r]=[],n.faceVertexUvs[r]=[]}for(s=0,l=P.length;l>s;)_=new THREE.Vector3,_.x=P[s++]*t,_.y=P[s++]*t,_.z=P[s++]*t,n.vertices.push(_);for(s=0,l=D.length;l>s;){if(f=D[s++],m=i(f,0),v=i(f,1),g=i(f,2),E=i(f,3),y=i(f,4),T=i(f,5),x=i(f,6),b=i(f,7),m?(R=new THREE.Face4,R.a=D[s++],R.b=D[s++],R.c=D[s++],R.d=D[s++],c=4):(R=new THREE.Face3,R.a=D[s++],R.b=D[s++],R.c=D[s++],c=3),v&&(p=D[s++],R.materialIndex=p),a=n.faces.length,g)for(r=0;F>r;r++)S=e.uvs[r],d=D[s++],C=S[2*d],A=S[2*d+1],n.faceUvs[r][a]=new THREE.Vector2(C,A);if(E)for(r=0;F>r;r++){for(S=e.uvs[r],M=[],o=0;c>o;o++)d=D[s++],C=S[2*d],A=S[2*d+1],M[o]=new THREE.Vector2(C,A);n.faceVertexUvs[r][a]=M}if(y&&(u=3*D[s++],H=new THREE.Vector3,H.x=L[u++],H.y=L[u++],H.z=L[u],R.normal=H),T)for(r=0;c>r;r++)u=3*D[s++],H=new THREE.Vector3,H.x=L[u++],H.y=L[u++],H.z=L[u],R.vertexNormals.push(H);if(x&&(h=D[s++],w=new THREE.Color(N[h]),R.color=w),b)for(r=0;c>r;r++)h=D[s++],w=new THREE.Color(N[h]),R.vertexColors.push(w);n.faces.push(R)}}function r(){var t,i,r,o,a,s,l,c,h,u;if(e.skinWeights)for(t=0,i=e.skinWeights.length;i>t;t+=2)r=e.skinWeights[t],o=e.skinWeights[t+1],a=0,s=0,n.skinWeights.push(new THREE.Vector4(r,o,a,s));if(e.skinIndices)for(t=0,i=e.skinIndices.length;i>t;t+=2)l=e.skinIndices[t],c=e.skinIndices[t+1],h=0,u=0,n.skinIndices.push(new THREE.Vector4(l,c,h,u));n.bones=e.bones,n.animation=e.animation}function o(t){if(void 0!==e.morphTargets){var i,r,o,a,s,l;for(i=0,r=e.morphTargets.length;r>i;i++)for(n.morphTargets[i]={},n.morphTargets[i].name=e.morphTargets[i].name,n.morphTargets[i].vertices=[],s=n.morphTargets[i].vertices,l=e.morphTargets[i].vertices,o=0,a=l.length;a>o;o+=3){var c=new THREE.Vector3;c.x=l[o]*t,c.y=l[o+1]*t,c.z=l[o+2]*t,s.push(c)}}if(void 0!==e.morphColors){var i,r,h,u,d,p,f;for(i=0,r=e.morphColors.length;r>i;i++)for(n.morphColors[i]={},n.morphColors[i].name=e.morphColors[i].name,n.morphColors[i].colors=[],d=n.morphColors[i].colors,p=e.morphColors[i].colors,h=0,u=p.length;u>h;h+=3)f=new THREE.Color(16755200),f.setRGB(p[h],p[h+1],p[h+2]),d.push(f)}}var n=new THREE.Geometry,a=void 0!==e.scale?1/e.scale:1;if(i(a),r(),o(a),n.computeCentroids(),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===e.materials)return{geometry:n};var s=this.initMaterials(e.materials,t);return this.needsTangents(s)&&n.computeTangents(),{geometry:n,materials:s}};