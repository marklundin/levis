THREE.CanvasRenderer=function(e){function t(){Vt.setRGB(0,0,0),Ut.setRGB(0,0,0),Bt.setRGB(0,0,0);for(var e=0,t=H.length;t>e;e++){var i=H[e],r=i.color;i instanceof THREE.AmbientLight?Vt.add(r):i instanceof THREE.DirectionalLight?Ut.add(r):i instanceof THREE.PointLight&&Bt.add(r)}}function i(e,t,i){for(var r=0,o=H.length;o>r;r++){var n=H[r];if(Nt.copy(n.color),n instanceof THREE.DirectionalLight){var a=jt.getPositionFromMatrix(n.matrixWorld).normalize(),s=t.dot(a);if(0>=s)continue;s*=n.intensity,i.add(Nt.multiplyScalar(s))}else if(n instanceof THREE.PointLight){var a=jt.getPositionFromMatrix(n.matrixWorld),s=t.dot(jt.subVectors(a,e).normalize());if(0>=s)continue;if(s*=0==n.distance?1:1-Math.min(e.distanceTo(a)/n.distance,1),0==s)continue;s*=n.intensity,i.add(Nt.multiplyScalar(s))}}}function r(e,t,i){m(i.opacity),g(i.blending);var r,o,n,a,s,l,c;if(i instanceof THREE.ParticleBasicMaterial)if(null===i.map){if(n=t.object.scale.x,a=t.object.scale.y,n*=t.scale.x*C,a*=t.scale.y*A,Ot.min.set(e.x-n,e.y-a),Ot.max.set(e.x+n,e.y+a),It.isIntersectionBox(Ot)===!1)return Ot.makeEmpty(),void 0;x(i.color.getStyle()),pt.save(),pt.translate(e.x,e.y),pt.rotate(-t.rotation),pt.scale(n,a),pt.fillRect(-1,-1,2,2),pt.restore()}else{if(s=i.map.image,l=s.width>>1,c=s.height>>1,n=t.scale.x*C,a=t.scale.y*A,r=n*l,o=a*c,Ot.min.set(e.x-r,e.y-o),Ot.max.set(e.x+r,e.y+o),It.isIntersectionBox(Ot)===!1)return Ot.makeEmpty(),void 0;pt.save(),pt.translate(e.x,e.y),pt.rotate(-t.rotation),pt.scale(n,-a),pt.translate(-l,-c),pt.drawImage(s,0,0),pt.restore()}else if(i instanceof THREE.ParticleCanvasMaterial){if(r=t.scale.x*C,o=t.scale.y*A,Ot.min.set(e.x-r,e.y-o),Ot.max.set(e.x+r,e.y+o),It.isIntersectionBox(Ot)===!1)return Ot.makeEmpty(),void 0;T(i.color.getStyle()),x(i.color.getStyle()),pt.save(),pt.translate(e.x,e.y),pt.rotate(-t.rotation),pt.scale(r,o),i.program(pt),pt.restore()}}function o(e,t,i,r){if(m(r.opacity),g(r.blending),pt.beginPath(),pt.moveTo(e.positionScreen.x,e.positionScreen.y),pt.lineTo(t.positionScreen.x,t.positionScreen.y),r instanceof THREE.LineBasicMaterial){if(v(r.linewidth),E(r.linecap),y(r.linejoin),r.vertexColors!==THREE.VertexColors)T(r.color.getStyle());else{var o=i.vertexColors[0].getStyle(),n=i.vertexColors[1].getStyle();if(o===n)T(o);else{try{var a=pt.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,o),a.addColorStop(1,n)}catch(s){a=o}T(a)}}pt.stroke(),Ot.expandByScalar(2*r.linewidth)}else r instanceof THREE.LineDashedMaterial&&(v(r.linewidth),E(r.linecap),y(r.linejoin),T(r.color.getStyle()),R(r.dashSize,r.gapSize),pt.stroke(),Ot.expandByScalar(2*r.linewidth),R(null,null))}function n(e,t,r,o,n,a,l,f){if(ht.info.render.vertices+=3,ht.info.render.faces++,m(f.opacity),g(f.blending),k=e.positionScreen.x,I=e.positionScreen.y,z=t.positionScreen.x,O=t.positionScreen.y,V=r.positionScreen.x,U=r.positionScreen.y,s(k,I,z,O,V,U),(f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&null===f.map)Pt.copy(f.color),Lt.copy(f.emissive),f.vertexColors===THREE.FaceColors&&Pt.multiply(l.color),f.wireframe===!1&&f.shading==THREE.SmoothShading&&3==l.vertexNormalsLength?(St.copy(Vt),Ct.copy(Vt),At.copy(Vt),i(l.v1.positionWorld,l.vertexNormalsModel[0],St),i(l.v2.positionWorld,l.vertexNormalsModel[1],Ct),i(l.v3.positionWorld,l.vertexNormalsModel[2],At),St.multiply(Pt).add(Lt),Ct.multiply(Pt).add(Lt),At.multiply(Pt).add(Lt),Dt.addColors(Ct,At).multiplyScalar(.5),Z=p(St,Ct,At,Dt),d(k,I,z,O,V,U,0,0,1,0,0,1,Z)):(Mt.copy(Vt),i(l.centroidModel,l.normalModel,Mt),Mt.multiply(Pt).add(Lt),f.wireframe===!0?c(Mt,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(Mt));else if(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)null!==f.map?f.map.mapping instanceof THREE.UVMapping&&(Q=l.uvs[0],u(k,I,z,O,V,U,Q[o].x,Q[o].y,Q[n].x,Q[n].y,Q[a].x,Q[a].y,f.map)):null!==f.envMap?f.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(jt.copy(l.vertexNormalsModelView[o]),$=.5*jt.x+.5,J=.5*jt.y+.5,jt.copy(l.vertexNormalsModelView[n]),et=.5*jt.x+.5,tt=.5*jt.y+.5,jt.copy(l.vertexNormalsModelView[a]),it=.5*jt.x+.5,rt=.5*jt.y+.5,u(k,I,z,O,V,U,$,J,et,tt,it,rt,f.envMap)):(Mt.copy(f.color),f.vertexColors===THREE.FaceColors&&Mt.multiply(l.color),f.wireframe===!0?c(Mt,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(Mt));else if(f instanceof THREE.MeshDepthMaterial)Y=D.near,K=D.far,St.r=St.g=St.b=1-b(e.positionScreen.z*e.positionScreen.w,Y,K),Ct.r=Ct.g=Ct.b=1-b(t.positionScreen.z*t.positionScreen.w,Y,K),At.r=At.g=At.b=1-b(r.positionScreen.z*r.positionScreen.w,Y,K),Dt.addColors(Ct,At).multiplyScalar(.5),Z=p(St,Ct,At,Dt),d(k,I,z,O,V,U,0,0,1,0,0,1,Z);else if(f instanceof THREE.MeshNormalMaterial){var v;f.shading==THREE.FlatShading?(v=l.normalModelView,Mt.setRGB(v.x,v.y,v.z).multiplyScalar(.5).addScalar(.5),f.wireframe===!0?c(Mt,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(Mt)):f.shading==THREE.SmoothShading&&(v=l.vertexNormalsModelView[o],St.setRGB(v.x,v.y,v.z).multiplyScalar(.5).addScalar(.5),v=l.vertexNormalsModelView[n],Ct.setRGB(v.x,v.y,v.z).multiplyScalar(.5).addScalar(.5),v=l.vertexNormalsModelView[a],At.setRGB(v.x,v.y,v.z).multiplyScalar(.5).addScalar(.5),Dt.addColors(Ct,At).multiplyScalar(.5),Z=p(St,Ct,At,Dt),d(k,I,z,O,V,U,0,0,1,0,0,1,Z))}}function a(e,t,r,o,a,u,f,v){if(ht.info.render.vertices+=4,ht.info.render.faces++,m(v.opacity),g(v.blending),void 0!==v.map&&null!==v.map||void 0!==v.envMap&&null!==v.envMap)return n(e,t,o,0,1,3,f,v),n(a,r,u,1,2,3,f,v),void 0;if(k=e.positionScreen.x,I=e.positionScreen.y,z=t.positionScreen.x,O=t.positionScreen.y,V=r.positionScreen.x,U=r.positionScreen.y,B=o.positionScreen.x,j=o.positionScreen.y,G=a.positionScreen.x,W=a.positionScreen.y,X=u.positionScreen.x,q=u.positionScreen.y,v instanceof THREE.MeshLambertMaterial||v instanceof THREE.MeshPhongMaterial)Pt.copy(v.color),Lt.copy(v.emissive),v.vertexColors===THREE.FaceColors&&Pt.multiply(f.color),v.wireframe===!1&&v.shading==THREE.SmoothShading&&4==f.vertexNormalsLength?(St.copy(Vt),Ct.copy(Vt),At.copy(Vt),Dt.copy(Vt),i(f.v1.positionWorld,f.vertexNormalsModel[0],St),i(f.v2.positionWorld,f.vertexNormalsModel[1],Ct),i(f.v4.positionWorld,f.vertexNormalsModel[3],At),i(f.v3.positionWorld,f.vertexNormalsModel[2],Dt),St.multiply(Pt).add(Lt),Ct.multiply(Pt).add(Lt),At.multiply(Pt).add(Lt),Dt.multiply(Pt).add(Lt),Z=p(St,Ct,At,Dt),s(k,I,z,O,B,j),d(k,I,z,O,B,j,0,0,1,0,0,1,Z),s(G,W,V,U,X,q),d(G,W,V,U,X,q,1,0,1,1,0,1,Z)):(Mt.copy(Vt),i(f.centroidModel,f.normalModel,Mt),Mt.multiply(Pt).add(Lt),l(k,I,z,O,V,U,B,j),v.wireframe===!0?c(Mt,v.wireframeLinewidth,v.wireframeLinecap,v.wireframeLinejoin):h(Mt));else if(v instanceof THREE.MeshBasicMaterial)Mt.copy(v.color),v.vertexColors===THREE.FaceColors&&Mt.multiply(f.color),l(k,I,z,O,V,U,B,j),v.wireframe===!0?c(Mt,v.wireframeLinewidth,v.wireframeLinecap,v.wireframeLinejoin):h(Mt);else if(v instanceof THREE.MeshNormalMaterial){var E;v.shading==THREE.FlatShading?(E=f.normalModelView,Mt.setRGB(E.x,E.y,E.z).multiplyScalar(.5).addScalar(.5),l(k,I,z,O,V,U,B,j),v.wireframe===!0?c(Mt,v.wireframeLinewidth,v.wireframeLinecap,v.wireframeLinejoin):h(Mt)):v.shading==THREE.SmoothShading&&(E=f.vertexNormalsModelView[0],St.setRGB(E.x,E.y,E.z).multiplyScalar(.5).addScalar(.5),E=f.vertexNormalsModelView[1],Ct.setRGB(E.x,E.y,E.z).multiplyScalar(.5).addScalar(.5),E=f.vertexNormalsModelView[3],At.setRGB(E.x,E.y,E.z).multiplyScalar(.5).addScalar(.5),E=f.vertexNormalsModelView[2],Dt.setRGB(E.x,E.y,E.z).multiplyScalar(.5).addScalar(.5),Z=p(St,Ct,At,Dt),s(k,I,z,O,B,j),d(k,I,z,O,B,j,0,0,1,0,0,1,Z),s(G,W,V,U,X,q),d(G,W,V,U,X,q,1,0,1,1,0,1,Z))}else v instanceof THREE.MeshDepthMaterial&&(Y=D.near,K=D.far,St.r=St.g=St.b=1-b(e.positionScreen.z*e.positionScreen.w,Y,K),Ct.r=Ct.g=Ct.b=1-b(t.positionScreen.z*t.positionScreen.w,Y,K),At.r=At.g=At.b=1-b(o.positionScreen.z*o.positionScreen.w,Y,K),Dt.r=Dt.g=Dt.b=1-b(r.positionScreen.z*r.positionScreen.w,Y,K),Z=p(St,Ct,At,Dt),s(k,I,z,O,B,j),d(k,I,z,O,B,j,0,0,1,0,0,1,Z),s(G,W,V,U,X,q),d(G,W,V,U,X,q,1,0,1,1,0,1,Z))}function s(e,t,i,r,o,n){pt.beginPath(),pt.moveTo(e,t),pt.lineTo(i,r),pt.lineTo(o,n),pt.closePath()}function l(e,t,i,r,o,n,a,s){pt.beginPath(),pt.moveTo(e,t),pt.lineTo(i,r),pt.lineTo(o,n),pt.lineTo(a,s),pt.closePath()}function c(e,t,i,r){v(t),E(i),y(r),T(e.getStyle()),pt.stroke(),Ot.expandByScalar(2*t)}function h(e){x(e.getStyle()),pt.fill()}function u(e,t,i,r,o,n,a,s,l,c,u,d,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(p.needsUpdate===!0){var f=p.wrapS==THREE.RepeatWrapping,m=p.wrapT==THREE.RepeatWrapping;Ft[p.id]=pt.createPattern(p.image,f===!0&&m===!0?"repeat":f===!0&&m===!1?"repeat-x":f===!1&&m===!0?"repeat-y":"no-repeat"),p.needsUpdate=!1}void 0===Ft[p.id]?x("rgba(0,0,0,1)"):x(Ft[p.id]);var g,v,E,y,T,R,b,_,w=p.offset.x/p.repeat.x,H=p.offset.y/p.repeat.y,M=p.image.width*p.repeat.x,S=p.image.height*p.repeat.y;if(a=(a+w)*M,s=(1-s+H)*S,l=(l+w)*M,c=(1-c+H)*S,u=(u+w)*M,d=(1-d+H)*S,i-=e,r-=t,o-=e,n-=t,l-=a,c-=s,u-=a,d-=s,b=l*d-u*c,0===b){if(void 0===kt[p.id]){var C=document.createElement("canvas");C.width=p.image.width,C.height=p.image.height;var A=C.getContext("2d");A.drawImage(p.image,0,0),kt[p.id]=A.getImageData(0,0,p.image.width,p.image.height).data}var D=kt[p.id],P=4*(Math.floor(a)+Math.floor(s)*p.image.width);return Mt.setRGB(D[P]/255,D[P+1]/255,D[P+2]/255),h(Mt),void 0}_=1/b,g=(d*i-c*o)*_,v=(d*r-c*n)*_,E=(l*o-u*i)*_,y=(l*n-u*r)*_,T=e-g*a-E*s,R=t-v*a-y*s,pt.save(),pt.transform(g,v,E,y,T,R),pt.fill(),pt.restore()}}function d(e,t,i,r,o,n,a,s,l,c,h,u,d){var p,f,m,g,v,E,y,T,x=d.width-1,R=d.height-1;a*=x,s*=R,l*=x,c*=R,h*=x,u*=R,i-=e,r-=t,o-=e,n-=t,l-=a,c-=s,h-=a,u-=s,y=l*u-h*c,T=1/y,p=(u*i-c*o)*T,f=(u*r-c*n)*T,m=(l*o-h*i)*T,g=(l*n-h*r)*T,v=e-p*a-m*s,E=t-f*a-g*s,pt.save(),pt.transform(p,f,m,g,v,E),pt.clip(),pt.drawImage(d,0,0),pt.restore()}function p(e,t,i,r){return st[0]=0|255*e.r,st[1]=0|255*e.g,st[2]=0|255*e.b,st[4]=0|255*t.r,st[5]=0|255*t.g,st[6]=0|255*t.b,st[8]=0|255*i.r,st[9]=0|255*i.g,st[10]=0|255*i.b,st[12]=0|255*r.r,st[13]=0|255*r.g,st[14]=0|255*r.b,nt.putImageData(at,0,0),ct.drawImage(ot,0,0),lt}function f(e,t,i){var r,o=t.x-e.x,n=t.y-e.y,a=o*o+n*n;0!==a&&(r=i/Math.sqrt(a),o*=r,n*=r,t.x+=o,t.y+=n,e.x-=o,e.y-=n)}function m(e){gt!==e&&(pt.globalAlpha=e,gt=e)}function g(e){vt!==e&&(e===THREE.NormalBlending?pt.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?pt.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(pt.globalCompositeOperation="darker"),vt=e)}function v(e){Tt!==e&&(pt.lineWidth=e,Tt=e)}function E(e){xt!==e&&(pt.lineCap=e,xt=e)}function y(e){Rt!==e&&(pt.lineJoin=e,Rt=e)}function T(e){Et!==e&&(pt.strokeStyle=e,Et=e)}function x(e){yt!==e&&(pt.fillStyle=e,yt=e)}function R(e,t){(bt!==e||_t!==t)&&(pt.setLineDash([e,t]),bt=e,_t=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var b=THREE.Math.smoothstep;e=e||{};var _,w,H,M,S,C,A,D,P,L,N,F,k,I,z,O,V,U,B,j,G,W,X,q,Y,K,Z,Q,$,J,et,tt,it,rt,ot,nt,at,st,lt,ct,ht=this,ut=new THREE.Projector,dt=void 0!==e.canvas?e.canvas:document.createElement("canvas"),pt=dt.getContext("2d"),ft=new THREE.Color(0),mt=0,gt=1,vt=0,Et=null,yt=null,Tt=null,xt=null,Rt=null,bt=null,_t=0,wt=new THREE.RenderableVertex,Ht=new THREE.RenderableVertex,Mt=new THREE.Color,St=new THREE.Color,Ct=new THREE.Color,At=new THREE.Color,Dt=new THREE.Color,Pt=new THREE.Color,Lt=new THREE.Color,Nt=new THREE.Color,Ft={},kt={},It=new THREE.Box2,zt=new THREE.Box2,Ot=new THREE.Box2,Vt=new THREE.Color,Ut=new THREE.Color,Bt=new THREE.Color,jt=new THREE.Vector3,Gt=16;ot=document.createElement("canvas"),ot.width=ot.height=2,nt=ot.getContext("2d"),nt.fillStyle="rgba(0,0,0,1)",nt.fillRect(0,0,2,2),at=nt.getImageData(0,0,2,2),st=at.data,lt=document.createElement("canvas"),lt.width=lt.height=Gt,ct=lt.getContext("2d"),ct.translate(-Gt/2,-Gt/2),ct.scale(Gt,Gt),Gt--,void 0===pt.setLineDash&&(pt.setLineDash=void 0!==pt.mozDash?function(e){pt.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=dt,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,i){M=e*this.devicePixelRatio,S=t*this.devicePixelRatio,C=Math.floor(M/2),A=Math.floor(S/2),dt.width=M,dt.height=S,1!==this.devicePixelRatio&&i!==!1&&(dt.style.width=e+"px",dt.style.height=t+"px"),It.set(new THREE.Vector2(-C,-A),new THREE.Vector2(C,A)),zt.set(new THREE.Vector2(-C,-A),new THREE.Vector2(C,A)),gt=1,vt=0,Et=null,yt=null,Tt=null,xt=null,Rt=null},this.setClearColor=function(e,t){ft.set(e),mt=void 0!==t?t:1,zt.set(new THREE.Vector2(-C,-A),new THREE.Vector2(C,A))},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){pt.setTransform(1,0,0,-1,C,A),zt.empty()===!1&&(zt.intersect(It),zt.expandByScalar(2),1>mt&&pt.clearRect(0|zt.min.x,0|zt.min.y,0|zt.max.x-zt.min.x,0|zt.max.y-zt.min.y),mt>0&&(g(THREE.NormalBlending),m(1),x("rgba("+Math.floor(255*ft.r)+","+Math.floor(255*ft.g)+","+Math.floor(255*ft.b)+","+mt+")"),pt.fillRect(0|zt.min.x,0|zt.min.y,0|zt.max.x-zt.min.x,0|zt.max.y-zt.min.y)),zt.makeEmpty())},this.render=function(e,i){if(i instanceof THREE.Camera==!1)return console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera."),void 0;this.autoClear===!0&&this.clear(),pt.setTransform(1,0,0,-1,C,A),ht.info.render.vertices=0,ht.info.render.faces=0,_=ut.projectScene(e,i,this.sortObjects,this.sortElements),w=_.elements,H=_.lights,D=i,t();for(var s=0,l=w.length;l>s;s++){var c=w[s],h=c.material;if(void 0!==h&&h.visible!==!1){if(Ot.makeEmpty(),c instanceof THREE.RenderableParticle)P=c,P.x*=C,P.y*=A,r(P,c,h);else if(c instanceof THREE.RenderableLine)P=c.v1,L=c.v2,P.positionScreen.x*=C,P.positionScreen.y*=A,L.positionScreen.x*=C,L.positionScreen.y*=A,Ot.setFromPoints([P.positionScreen,L.positionScreen]),It.isIntersectionBox(Ot)===!0&&o(P,L,c,h);else if(c instanceof THREE.RenderableFace3){if(P=c.v1,L=c.v2,N=c.v3,P.positionScreen.z<-1||P.positionScreen.z>1)continue;if(L.positionScreen.z<-1||L.positionScreen.z>1)continue;if(N.positionScreen.z<-1||N.positionScreen.z>1)continue;P.positionScreen.x*=C,P.positionScreen.y*=A,L.positionScreen.x*=C,L.positionScreen.y*=A,N.positionScreen.x*=C,N.positionScreen.y*=A,h.overdraw>0&&(f(P.positionScreen,L.positionScreen,h.overdraw),f(L.positionScreen,N.positionScreen,h.overdraw),f(N.positionScreen,P.positionScreen,h.overdraw)),Ot.setFromPoints([P.positionScreen,L.positionScreen,N.positionScreen]),It.isIntersectionBox(Ot)===!0&&n(P,L,N,0,1,2,c,h)}else if(c instanceof THREE.RenderableFace4){if(P=c.v1,L=c.v2,N=c.v3,F=c.v4,P.positionScreen.z<-1||P.positionScreen.z>1)continue;if(L.positionScreen.z<-1||L.positionScreen.z>1)continue;if(N.positionScreen.z<-1||N.positionScreen.z>1)continue;if(F.positionScreen.z<-1||F.positionScreen.z>1)continue;P.positionScreen.x*=C,P.positionScreen.y*=A,L.positionScreen.x*=C,L.positionScreen.y*=A,N.positionScreen.x*=C,N.positionScreen.y*=A,F.positionScreen.x*=C,F.positionScreen.y*=A,wt.positionScreen.copy(L.positionScreen),Ht.positionScreen.copy(F.positionScreen),h.overdraw>0&&(f(P.positionScreen,L.positionScreen,h.overdraw),f(L.positionScreen,F.positionScreen,h.overdraw),f(F.positionScreen,P.positionScreen,h.overdraw),f(N.positionScreen,wt.positionScreen,h.overdraw),f(N.positionScreen,Ht.positionScreen,h.overdraw)),Ot.setFromPoints([P.positionScreen,L.positionScreen,N.positionScreen,F.positionScreen]),It.isIntersectionBox(Ot)===!0&&a(P,L,N,F,wt,Ht,c,h)}zt.union(Ot)}}pt.setTransform(1,0,0,1,0,0)}};