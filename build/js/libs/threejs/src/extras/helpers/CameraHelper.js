THREE.CameraHelper=function(e){function t(e,t,r){i(e,r);i(t,r)}function i(e,t){r.vertices.push(new THREE.Vector3);r.colors.push(new THREE.Color(t));if(void 0===n[e])n[e]=[];n[e].push(r.vertices.length-1)}var r=new THREE.Geometry;var a=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var n={};var o=16755200;var s=16711680;var l=43775;var c=16777215;var h=3355443;t("n1","n2",o);t("n2","n4",o);t("n4","n3",o);t("n3","n1",o);t("f1","f2",o);t("f2","f4",o);t("f4","f3",o);t("f3","f1",o);t("n1","f1",o);t("n2","f2",o);t("n3","f3",o);t("n4","f4",o);t("p","n1",s);t("p","n2",s);t("p","n3",s);t("p","n4",s);t("u1","u2",l);t("u2","u3",l);t("u3","u1",l);t("c","t",c);t("p","c",h);t("cn1","cn2",h);t("cn3","cn4",h);t("cf1","cf2",h);t("cf3","cf4",h);THREE.Line.call(this,r,a,THREE.LinePieces);this.camera=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=n;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Camera;var i=new THREE.Projector;return function(){function r(r,n,o,s){e.set(n,o,s);i.unprojectVector(e,t);var l=a.pointMap[r];if(void 0!==l)for(var c=0,h=l.length;h>c;c++)a.geometry.vertices[l[c]].copy(e)}var a=this;var n=1,o=1;t.projectionMatrix.copy(this.camera.projectionMatrix);r("c",0,0,-1);r("t",0,0,1);r("n1",-n,-o,-1);r("n2",n,-o,-1);r("n3",-n,o,-1);r("n4",n,o,-1);r("f1",-n,-o,1);r("f2",n,-o,1);r("f3",-n,o,1);r("f4",n,o,1);r("u1",.7*n,1.1*o,-1);r("u2",.7*-n,1.1*o,-1);r("u3",0,2*o,-1);r("cf1",-n,0,1);r("cf2",n,0,1);r("cf3",0,-o,1);r("cf4",0,o,1);r("cn1",-n,0,-1);r("cn2",n,0,-1);r("cn3",0,-o,-1);r("cn4",0,o,-1);this.geometry.verticesNeedUpdate=!0}}();