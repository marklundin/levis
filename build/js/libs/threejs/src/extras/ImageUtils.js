THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i){var r=new Image,o=new THREE.Texture(r,t),n=new THREE.ImageLoader;return n.crossOrigin=this.crossOrigin,n.load(e,function(e){o.image=e,o.needsUpdate=!0,i&&i(o)}),o.sourceFile=e,o},loadCompressedTexture:function(e,t,i,r){var o=new THREE.CompressedTexture;o.mapping=t;var n=new XMLHttpRequest;return n.onload=function(){var e=n.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,i&&i(o)},n.onerror=r,n.open("GET",e,!0),n.responseType="arraybuffer",n.send(null),o},loadTextureCube:function(e,t,i,r){var o=[];o.loadCount=0;var n=new THREE.Texture;n.image=o,void 0!==t&&(n.mapping=t),n.flipY=!1;for(var a=0,s=e.length;s>a;++a){var l=new Image;o[a]=l,l.onload=function(){o.loadCount+=1,6===o.loadCount&&(n.needsUpdate=!0,i&&i(n))},l.onerror=r,l.crossOrigin=this.crossOrigin,l.src=e[a]}return n},loadCompressedTextureCube:function(e,t,i,r){var o=[];o.loadCount=0;var n=new THREE.CompressedTexture;n.image=o,void 0!==t&&(n.mapping=t),n.flipY=!1,n.generateMipmaps=!1;var a=function(e,t){return function(){var r=e.response,a=THREE.ImageUtils.parseDDS(r,!0);t.format=a.format,t.mipmaps=a.mipmaps,t.width=a.width,t.height=a.height,o.loadCount+=1,6===o.loadCount&&(n.format=a.format,n.needsUpdate=!0,i&&i(n))}};if(e instanceof Array)for(var s=0,l=e.length;l>s;++s){var c={};o[s]=c;var h=new XMLHttpRequest;h.onload=a(h,c),h.onerror=r;var u=e[s];h.open("GET",u,!0),h.responseType="arraybuffer",h.send(null)}else{var u=e,h=new XMLHttpRequest;h.onload=function(){var e=h.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var r=t.mipmaps.length/t.mipmapCount,a=0;r>a;a++){o[a]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[a].mipmaps.push(t.mipmaps[a*t.mipmapCount+s]),o[a].format=t.format,o[a].width=t.width,o[a].height=t.height}n.format=t.format,n.needsUpdate=!0,i&&i(n)}},h.onerror=r,h.open("GET",u,!0),h.responseType="arraybuffer",h.send(null)}return n},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e){return String.fromCharCode(255&e,255&e>>8,255&e>>16,255&e>>24)}var o={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},n=542327876,a=131072,s=512,l=4,c=i("DXT1"),h=i("DXT3"),u=i("DXT5"),d=31,p=0,f=1,m=2,v=3,g=4,E=7,y=20,T=21,_=28,x=new Int32Array(e,0,d);if(x[p]!==n)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),o;if(!x[y]&l)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),o;var b,R=x[T];switch(R){case c:b=8,o.format=THREE.RGB_S3TC_DXT1_Format;break;case h:b=16,o.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:b=16,o.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",r(R)),o}o.mipmapCount=1,x[m]&a&&t!==!1&&(o.mipmapCount=Math.max(1,x[E])),o.isCubemap=x[_]&s?!0:!1,o.width=x[g],o.height=x[v];for(var w=x[f]+4,H=o.width,S=o.height,M=o.isCubemap?6:1,C=0;M>C;C++){for(var A=0;A<o.mipmapCount;A++){var D=Math.max(4,H)/4*Math.max(4,S)/4*b,P=new Uint8Array(e,w,D),L={data:P,width:H,height:S};o.mipmaps.push(L),w+=D,H=Math.max(.5*H,1),S=Math.max(.5*S,1)}H=o.width,S=o.height}return o},getNormalMap:function(e,t){var i=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},o=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var n=e.width,a=e.height,s=document.createElement("canvas");s.width=n,s.height=a;var l=s.getContext("2d");l.drawImage(e,0,0);for(var c=l.getImageData(0,0,n,a).data,h=l.createImageData(n,a),u=h.data,d=0;n>d;d++)for(var p=0;a>p;p++){var f=0>p-1?0:p-1,m=p+1>a-1?a-1:p+1,v=0>d-1?0:d-1,g=d+1>n-1?n-1:d+1,E=[],y=[0,0,c[4*(p*n+d)]/255*t];E.push([-1,0,c[4*(p*n+v)]/255*t]),E.push([-1,-1,c[4*(f*n+v)]/255*t]),E.push([0,-1,c[4*(f*n+d)]/255*t]),E.push([1,-1,c[4*(f*n+g)]/255*t]),E.push([1,0,c[4*(p*n+g)]/255*t]),E.push([1,1,c[4*(m*n+g)]/255*t]),E.push([0,1,c[4*(m*n+d)]/255*t]),E.push([-1,1,c[4*(m*n+v)]/255*t]);for(var T=[],_=E.length,x=0;_>x;x++){var b=E[x],R=E[(x+1)%_];b=r(b,y),R=r(R,y),T.push(o(i(b,R)))}for(var w=[0,0,0],x=0;x<T.length;x++)w[0]+=T[x][0],w[1]+=T[x][1],w[2]+=T[x][2];w[0]/=T.length,w[1]/=T.length,w[2]/=T.length;var H=4*(p*n+d);u[H]=0|255*((w[0]+1)/2),u[H+1]=0|255*((w[1]+1)/2),u[H+2]=0|255*w[2],u[H+3]=255}return l.putImageData(h,0,0),s},generateDataTexture:function(e,t,i){for(var r=e*t,o=new Uint8Array(3*r),n=Math.floor(255*i.r),a=Math.floor(255*i.g),s=Math.floor(255*i.b),l=0;r>l;l++)o[3*l]=n,o[3*l+1]=a,o[3*l+2]=s;var c=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return c.needsUpdate=!0,c}};