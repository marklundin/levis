THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i){var r=new Image;var n=new THREE.Texture(r,t);var o=new THREE.ImageLoader;o.crossOrigin=this.crossOrigin;o.load(e,function(e){n.image=e;n.needsUpdate=!0;if(i)i(n)});n.sourceFile=e;return n},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;o.onload=function(){var e=o.response;var t=THREE.ImageUtils.parseDDS(e,!0);n.format=t.format;n.mipmaps=t.mipmaps;n.image.width=t.width;n.image.height=t.height;n.generateMipmaps=!1;n.needsUpdate=!0;if(i)i(n)};o.onerror=r;o.open("GET",e,!0);o.responseType="arraybuffer";o.send(null);return n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n;if(void 0!==t)o.mapping=t;o.flipY=!1;for(var a=0,s=e.length;s>a;++a){var l=new Image;n[a]=l;l.onload=function(){n.loadCount+=1;if(6===n.loadCount){o.needsUpdate=!0;if(i)i(o)}};l.onerror=r;l.crossOrigin=this.crossOrigin;l.src=e[a]}return o},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;o.image=n;if(void 0!==t)o.mapping=t;o.flipY=!1;o.generateMipmaps=!1;var a=function(e,t){return function(){var r=e.response;var a=THREE.ImageUtils.parseDDS(r,!0);t.format=a.format;t.mipmaps=a.mipmaps;t.width=a.width;t.height=a.height;n.loadCount+=1;if(6===n.loadCount){o.format=a.format;o.needsUpdate=!0;if(i)i(o)}}};if(e instanceof Array)for(var s=0,l=e.length;l>s;++s){var c={};n[s]=c;var h=new XMLHttpRequest;h.onload=a(h,c);h.onerror=r;var u=e[s];h.open("GET",u,!0);h.responseType="arraybuffer";h.send(null)}else{var u=e;var h=new XMLHttpRequest;h.onload=function(){var e=h.response;var t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){var r=t.mipmaps.length/t.mipmapCount;for(var a=0;r>a;a++){n[a]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++){n[a].mipmaps.push(t.mipmaps[a*t.mipmapCount+s]);n[a].format=t.format;n[a].width=t.width;n[a].height=t.height}}o.format=t.format;o.needsUpdate=!0;if(i)i(o)}};h.onerror=r;h.open("GET",u,!0);h.responseType="arraybuffer";h.send(null)}return o},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e){return String.fromCharCode(255&e,255&e>>8,255&e>>16,255&e>>24)}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};var o=542327876;var a=131072;var s=512;var l=4;var c=i("DXT1");var h=i("DXT3");var u=i("DXT5");var f=31;var d=0;var p=1;var m=2;var v=3;var g=4;var E=7;var y=20;var T=21;var _=28;var b=new Int32Array(e,0,f);if(b[d]!==o){console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header");return n}if(!b[y]&l){console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code");return n}var x;var R=b[T];switch(R){case c:x=8;n.format=THREE.RGB_S3TC_DXT1_Format;break;case h:x=16;n.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:x=16;n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",r(R));return n}n.mipmapCount=1;if(b[m]&a&&t!==!1)n.mipmapCount=Math.max(1,b[E]);n.isCubemap=b[_]&s?!0:!1;n.width=b[g];n.height=b[v];var w=b[p]+4;var H=n.width;var S=n.height;var M=n.isCubemap?6:1;for(var C=0;M>C;C++){for(var A=0;A<n.mipmapCount;A++){var D=Math.max(4,H)/4*Math.max(4,S)/4*x;var P=new Uint8Array(e,w,D);var L={data:P,width:H,height:S};n.mipmaps.push(L);w+=D;H=Math.max(.5*H,1);S=Math.max(.5*S,1)}H=n.width;S=n.height}return n},getNormalMap:function(e,t){var i=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]};var r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]};var n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var o=e.width;var a=e.height;var s=document.createElement("canvas");s.width=o;s.height=a;var l=s.getContext("2d");l.drawImage(e,0,0);var c=l.getImageData(0,0,o,a).data;var h=l.createImageData(o,a);var u=h.data;for(var f=0;o>f;f++)for(var d=0;a>d;d++){var p=0>d-1?0:d-1;var m=d+1>a-1?a-1:d+1;var v=0>f-1?0:f-1;var g=f+1>o-1?o-1:f+1;var E=[];var y=[0,0,c[4*(d*o+f)]/255*t];E.push([-1,0,c[4*(d*o+v)]/255*t]);E.push([-1,-1,c[4*(p*o+v)]/255*t]);E.push([0,-1,c[4*(p*o+f)]/255*t]);E.push([1,-1,c[4*(p*o+g)]/255*t]);E.push([1,0,c[4*(d*o+g)]/255*t]);E.push([1,1,c[4*(m*o+g)]/255*t]);E.push([0,1,c[4*(m*o+f)]/255*t]);E.push([-1,1,c[4*(m*o+v)]/255*t]);var T=[];var _=E.length;for(var b=0;_>b;b++){var x=E[b];var R=E[(b+1)%_];x=r(x,y);R=r(R,y);T.push(n(i(x,R)))}var w=[0,0,0];for(var b=0;b<T.length;b++){w[0]+=T[b][0];w[1]+=T[b][1];w[2]+=T[b][2]}w[0]/=T.length;w[1]/=T.length;w[2]/=T.length;var H=4*(d*o+f);u[H]=0|255*((w[0]+1)/2);u[H+1]=0|255*((w[1]+1)/2);u[H+2]=0|255*w[2];u[H+3]=255}l.putImageData(h,0,0);return s},generateDataTexture:function(e,t,i){var r=e*t;var n=new Uint8Array(3*r);var o=Math.floor(255*i.r);var a=Math.floor(255*i.g);var s=Math.floor(255*i.b);for(var l=0;r>l;l++){n[3*l]=o;n[3*l+1]=a;n[3*l+2]=s}var c=new THREE.DataTexture(n,e,t,THREE.RGBFormat);c.needsUpdate=!0;return c}};