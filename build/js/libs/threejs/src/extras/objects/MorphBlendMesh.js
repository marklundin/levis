THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var i=this.geometry.morphTargets.length;var r="__default";var a=0;var o=i-1;var n=i/1;this.createAnimation(r,a,o,n);this.setAnimationWeight(r,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){var a={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=a;this.animationsList.push(a)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){var t=/([a-z]+)(\d+)/;var i,r={};var a=this.geometry;for(var o=0,n=a.morphTargets.length;n>o;o++){var s=a.morphTargets[o];var l=s.name.match(t);if(l&&l.length>1){var c=l[1];l[2];if(!r[c])r[c]={start:1/0,end:-1/0};var h=r[c];if(o<h.start)h.start=o;if(o>h.end)h.end=o;if(!i)i=c}}for(var c in r){var h=r[c];this.createAnimation(c,h.start,h.end,e)}this.firstAnimation=i};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];if(t){t.direction=1;t.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];if(t){t.direction=-1;t.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];if(i){i.fps=t;i.duration=(i.end-i.start)/i.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];if(i){i.duration=t;i.fps=(i.end-i.start)/i.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];if(i)i.weight=t};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];if(i)i.time=t};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;var i=this.animationsMap[e];if(i)t=i.time;return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;var i=this.animationsMap[e];if(i)t=i.duration;return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];if(t){t.time=0;t.active=!0}else console.warn("animation["+e+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];if(t)t.active=!1};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;i>t;t++){var r=this.animationsList[t];if(r.active){var a=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||r.time<0){r.direction*=-1;if(r.time>r.duration){r.time=r.duration;r.directionBackwards=!0}if(r.time<0){r.time=0;r.directionBackwards=!1}}}else{r.time=r.time%r.duration;if(r.time<0)r.time+=r.duration}var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/a),0,r.length-1);var n=r.weight;if(o!==r.currentFrame){this.morphTargetInfluences[r.lastFrame]=0;this.morphTargetInfluences[r.currentFrame]=1*n;this.morphTargetInfluences[o]=0;r.lastFrame=r.currentFrame;r.currentFrame=o}var s=r.time%a/a;if(r.directionBackwards)s=1-s;this.morphTargetInfluences[r.currentFrame]=s*n;this.morphTargetInfluences[r.lastFrame]=(1-s)*n}else;}};