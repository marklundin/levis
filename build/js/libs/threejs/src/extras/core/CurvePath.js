THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(e){this.curves.push(e)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t))this.curves.push(new THREE.LineCurve(t,e))};THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength();var i=this.getCurveLengths();var r,n,a=0;for(;a<i.length;){if(i[a]>=t){r=i[a]-t;n=this.curves[a];var o=1-r/n.getLength();return n.getPointAt(o)}a++}return null};THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0;var i,r=this.curves.length;for(i=0;r>i;i++){t+=this.curves[i].getLength();e.push(t)}this.cacheLengths=e;return e};THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints();var t,i,r;var n,a,o;t=i=Number.NEGATIVE_INFINITY;n=a=Number.POSITIVE_INFINITY;var s,l,c,h;var u=e[0]instanceof THREE.Vector3;h=u?new THREE.Vector3:new THREE.Vector2;for(l=0,c=e.length;c>l;l++){s=e[l];if(s.x>t)t=s.x;else if(s.x<n)n=s.x;if(s.y>i)i=s.y;else if(s.y<a)a=s.y;if(u)if(s.z>r)r=s.z;else if(s.z<o)o=s.z;h.add(s)}var f={minX:n,minY:a,maxX:t,maxY:i,centroid:h.divideScalar(c)};if(u){f.maxZ=r;f.minZ=o}return f};THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createGeometry=function(e){var t=new THREE.Geometry;for(var i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t};THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)};THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i=this.getPoints(e);var r,n;if(!t)t=this.bends;for(r=0,n=t.length;n>r;r++)i=this.getWrapPoints(i,t[r]);return i};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i=this.getSpacedPoints(e);var r,n;if(!t)t=this.bends;for(r=0,n=t.length;n>r;r++)i=this.getWrapPoints(i,t[r]);return i};THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i=this.getBoundingBox();var r,n,a,o,s,l;for(r=0,n=e.length;n>r;r++){a=e[r];o=a.x;s=a.y;l=o/i.maxX;l=t.getUtoTmapping(l,o);var c=t.getPoint(l);var h=t.getNormalVector(l).multiplyScalar(s);a.x=c.x+h.x;a.y=c.y+h.y}return e};