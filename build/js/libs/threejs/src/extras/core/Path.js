THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];if(e)this.fromPoints(e)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;i>t;t++)this.lineTo(e[t].x,e[t].y)};THREE.Path.prototype.moveTo=function(){var e=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:e})};THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments);var r=this.actions[this.actions.length-1].args;var n=r[r.length-2];var a=r[r.length-1];var o=new THREE.LineCurve(new THREE.Vector2(n,a),new THREE.Vector2(e,t));this.curves.push(o);this.actions.push({action:THREE.PathActions.LINE_TO,args:i})};THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments);var a=this.actions[this.actions.length-1].args;var o=a[a.length-2];var s=a[a.length-1];var l=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,s),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(l);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})};THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,a){var o=Array.prototype.slice.call(arguments);var s=this.actions[this.actions.length-1].args;var l=s[s.length-2];var c=s[s.length-1];var h=new THREE.CubicBezierCurve(new THREE.Vector2(l,c),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,a));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments);var i=this.actions[this.actions.length-1].args;var r=i[i.length-2];var n=i[i.length-1];var a=[new THREE.Vector2(r,n)];Array.prototype.push.apply(a,e);var o=new THREE.SplineCurve(a);this.curves.push(o);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})};THREE.Path.prototype.arc=function(e,t,i,r,n,a){var o=this.actions[this.actions.length-1].args;var s=o[o.length-2];var l=o[o.length-1];this.absarc(e+s,t+l,i,r,n,a)};THREE.Path.prototype.absarc=function(e,t,i,r,n,a){this.absellipse(e,t,i,i,r,n,a)};THREE.Path.prototype.ellipse=function(e,t,i,r,n,a,o){var s=this.actions[this.actions.length-1].args;var l=s[s.length-2];var c=s[s.length-1];this.absellipse(e+l,t+c,i,r,n,a,o)};THREE.Path.prototype.absellipse=function(e,t,i,r,n,a,o){var s=Array.prototype.slice.call(arguments);var l=new THREE.EllipseCurve(e,t,i,r,n,a,o);this.curves.push(l);var c=l.getPoint(o?1:0);s.push(c.x);s.push(c.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})};THREE.Path.prototype.getSpacedPoints=function(e){if(!e)e=40;var t=[];for(var i=0;e>i;i++)t.push(this.getPoint(i/e));return t};THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(e,t)}e=e||12;var i=[];var r,n,a,o,s;var l,c,h,u,f,d,p,m,v,g,E,y,T;for(r=0,n=this.actions.length;n>r;r++){a=this.actions[r];o=a.action;s=a.args;switch(o){case THREE.PathActions.MOVE_TO:i.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:i.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:l=s[2];c=s[3];f=s[0];d=s[1];if(i.length>0){v=i[i.length-1];p=v.x;m=v.y}else{v=this.actions[r-1].args;p=v[v.length-2];m=v[v.length-1]}for(g=1;e>=g;g++){E=g/e;y=THREE.Shape.Utils.b2(E,p,f,l);T=THREE.Shape.Utils.b2(E,m,d,c);i.push(new THREE.Vector2(y,T))}break;case THREE.PathActions.BEZIER_CURVE_TO:l=s[4];c=s[5];f=s[0];d=s[1];h=s[2];u=s[3];if(i.length>0){v=i[i.length-1];p=v.x;m=v.y}else{v=this.actions[r-1].args;p=v[v.length-2];m=v[v.length-1]}for(g=1;e>=g;g++){E=g/e;y=THREE.Shape.Utils.b3(E,p,f,h,l);T=THREE.Shape.Utils.b3(E,m,d,u,c);i.push(new THREE.Vector2(y,T))}break;case THREE.PathActions.CSPLINE_THRU:v=this.actions[r-1].args;var _=new THREE.Vector2(v[v.length-2],v[v.length-1]);var x=[_];var b=e*s[0].length;x=x.concat(s[0]);var R=new THREE.SplineCurve(x);for(g=1;b>=g;g++)i.push(R.getPointAt(g/b));break;case THREE.PathActions.ARC:var w=s[0],H=s[1],S=s[2],M=s[3],C=s[4],A=!!s[5];var D=C-M;var P;var L=2*e;for(g=1;L>=g;g++){E=g/L;if(!A)E=1-E;P=M+E*D;y=w+S*Math.cos(P);T=H+S*Math.sin(P);i.push(new THREE.Vector2(y,T))}break;case THREE.PathActions.ELLIPSE:var w=s[0],H=s[1],N=s[2],k=s[3],M=s[4],C=s[5],A=!!s[6];var D=C-M;var P;var L=2*e;for(g=1;L>=g;g++){E=g/L;if(!A)E=1-E;P=M+E*D;y=w+N*Math.cos(P);T=H+k*Math.sin(P);i.push(new THREE.Vector2(y,T))}}}var F=i[i.length-1];var I=1e-10;if(Math.abs(F.x-i[0].x)<I&&Math.abs(F.y-i[0].y)<I)i.splice(i.length-1,1);if(t)i.push(i[0]);return i};THREE.Path.prototype.toShapes=function(e){var t,i,r,n,a;var o=[],s=new THREE.Path;for(t=0,i=this.actions.length;i>t;t++){r=this.actions[t];a=r.args;n=r.action;if(n==THREE.PathActions.MOVE_TO)if(0!=s.actions.length){o.push(s);s=new THREE.Path}s[n].apply(s,a)}if(0!=s.actions.length)o.push(s);if(0==o.length)return[];var l,c,h,u=[];if(1==o.length){c=o[0];h=new THREE.Shape;h.actions=c.actions;h.curves=c.curves;u.push(h);return u}var f=!THREE.Shape.Utils.isClockWise(o[0].getPoints());f=e?!f:f;if(f){h=new THREE.Shape;for(t=0,i=o.length;i>t;t++){c=o[t];l=THREE.Shape.Utils.isClockWise(c.getPoints());l=e?!l:l;if(l){h.actions=c.actions;h.curves=c.curves;u.push(h);h=new THREE.Shape}else h.holes.push(c)}}else{h=void 0;for(t=0,i=o.length;i>t;t++){c=o[t];l=THREE.Shape.Utils.isClockWise(c.getPoints());l=e?!l:l;if(l){if(h)u.push(h);h=new THREE.Shape;h.actions=c.actions;h.curves=c.curves}else h.holes.push(c)}u.push(h)}return u};