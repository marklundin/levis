THREE.ExtrudeGeometry=function(e,t){if("undefined"!=typeof e){THREE.Geometry.call(this);e=e instanceof Array?e:[e];this.shapebb=e[e.length-1].getBoundingBox();this.addShapeList(e,t);this.computeCentroids();this.computeFaceNormals()}else e=[]};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){var i=e.length;for(var r=0;i>r;r++){var n=e[r];this.addShape(n,t)}};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){if(!t)console.log("die");return t.clone().multiplyScalar(i).add(e)}function r(e,t,i){return a(e,t,i)}function n(e,t,i){var r=Math.atan2(t.y-e.y,t.x-e.x);var n=Math.atan2(i.y-e.y,i.x-e.x);if(r>n)n+=2*Math.PI;var a=(r+n)/2;var o=-Math.cos(a);var s=-Math.sin(a);var l=new THREE.Vector2(o,s);return l}function a(e,t,i){var r,a,o,s,l,c,h=THREE.ExtrudeGeometry.__v1,u=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,d=THREE.ExtrudeGeometry.__v4,p=THREE.ExtrudeGeometry.__v5,m=THREE.ExtrudeGeometry.__v6;h.set(e.x-t.x,e.y-t.y);u.set(e.x-i.x,e.y-i.y);r=h.normalize();a=u.normalize();f.set(-r.y,r.x);d.set(a.y,-a.x);p.copy(e).add(f);m.copy(e).add(d);if(p.equals(m))return d.clone();p.copy(t).add(f);m.copy(i).add(d);o=r.dot(d);s=m.sub(p).dot(d);if(0===o){console.log("Either infinite or no solutions!");if(0===s)console.log("Its finite solutions.");else console.log("Too bad, no solutions.")}l=s/o;if(0>l)return n(e,t,i);c=r.multiplyScalar(l).add(p);return c.sub(e).clone()}function o(){if(v){var e=0;var t=X*e;for(K=0;Y>K;K++){G=O[K];h(G[2]+t,G[1]+t,G[0]+t,!0)}e=E+2*m;t=X*e;for(K=0;Y>K;K++){G=O[K];h(G[0]+t,G[1]+t,G[2]+t,!1)}}else{for(K=0;Y>K;K++){G=O[K];h(G[2],G[1],G[0],!0)}for(K=0;Y>K;K++){G=O[K];h(G[0]+X*E,G[1]+X*E,G[2]+X*E,!1)}}}function s(){var e=0;l(U,e);e+=U.length;for(A=0,D=k.length;D>A;A++){C=k[A];l(C,e);e+=C.length}}function l(e,t){var i,r;K=e.length;for(;--K>=0;){i=K;r=K-1;if(0>r)r=e.length-1;var n=0,a=E+2*m;for(n=0;a>n;n++){var o=X*n;var s=X*(n+1);var l=t+i+o,c=t+r+o,h=t+r+s,f=t+i+s;u(l,c,h,f,e,n,a,i,r)}}}function c(e,t,i){P.vertices.push(new THREE.Vector3(e,t,i))}function h(i,r,n,a){i+=L;r+=L;n+=L;P.faces.push(new THREE.Face3(i,r,n,null,null,_));var o=a?R.generateBottomUV(P,e,t,i,r,n):R.generateTopUV(P,e,t,i,r,n);P.faceVertexUvs[0].push(o)}function u(i,r,n,a,o,s,l,c,h){i+=L;r+=L;n+=L;a+=L;P.faces.push(new THREE.Face4(i,r,n,a,null,null,b));var u=R.generateSideWallUV(P,e,o,t,i,r,n,a,s,l,c,h);P.faceVertexUvs[0].push(u)}var f=void 0!==t.amount?t.amount:100;var d=void 0!==t.bevelThickness?t.bevelThickness:6;var p=void 0!==t.bevelSize?t.bevelSize:d-2;var m=void 0!==t.bevelSegments?t.bevelSegments:3;var v=void 0!==t.bevelEnabled?t.bevelEnabled:!0;var g=void 0!==t.curveSegments?t.curveSegments:12;var E=void 0!==t.steps?t.steps:1;var y=t.extrudePath;var T,x=!1;var _=t.material;var b=t.extrudeMaterial;var R=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;var w,H,S,M;if(y){T=y.getSpacedPoints(E);x=!0;v=!1;w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(y,E,!1);H=new THREE.Vector3;S=new THREE.Vector3;M=new THREE.Vector3}if(!v){m=0;d=0;p=0}var C,A,D;var P=this;var L=this.vertices.length;var N=e.extractPoints(g);var F=N.shape;var k=N.holes;var I=!THREE.Shape.Utils.isClockWise(F);if(I){F=F.reverse();for(A=0,D=k.length;D>A;A++){C=k[A];if(THREE.Shape.Utils.isClockWise(C))k[A]=C.reverse()}I=!1}var O=THREE.Shape.Utils.triangulateShape(F,k);var U=F;for(A=0,D=k.length;D>A;A++){C=k[A];F=F.concat(C)}var z,V,B,j,W,G,X=F.length,Y=O.length;U.length;180/Math.PI;var q=[];for(var K=0,Z=U.length,Q=Z-1,$=K+1;Z>K;K++,Q++,$++){if(Q===Z)Q=0;if($===Z)$=0;U[K];U[Q];U[$];q[K]=r(U[K],U[Q],U[$])}var J,et=[],tt=q.concat();for(A=0,D=k.length;D>A;A++){C=k[A];J=[];for(K=0,Z=C.length,Q=Z-1,$=K+1;Z>K;K++,Q++,$++){if(Q===Z)Q=0;if($===Z)$=0;J[K]=r(C[K],C[Q],C[$])}et.push(J);tt=tt.concat(J)}for(z=0;m>z;z++){B=z/m;j=d*(1-B);V=p*Math.sin(B*Math.PI/2);for(K=0,Z=U.length;Z>K;K++){W=i(U[K],q[K],V);c(W.x,W.y,-j)}for(A=0,D=k.length;D>A;A++){C=k[A];J=et[A];for(K=0,Z=C.length;Z>K;K++){W=i(C[K],J[K],V);c(W.x,W.y,-j)}}}V=p;for(K=0;X>K;K++){W=v?i(F[K],tt[K],V):F[K];if(!x)c(W.x,W.y,0);else{S.copy(w.normals[0]).multiplyScalar(W.x);H.copy(w.binormals[0]).multiplyScalar(W.y);M.copy(T[0]).add(S).add(H);c(M.x,M.y,M.z)}}var it;for(it=1;E>=it;it++)for(K=0;X>K;K++){W=v?i(F[K],tt[K],V):F[K];if(!x)c(W.x,W.y,f/E*it);else{S.copy(w.normals[it]).multiplyScalar(W.x);H.copy(w.binormals[it]).multiplyScalar(W.y);M.copy(T[it]).add(S).add(H);c(M.x,M.y,M.z)}}for(z=m-1;z>=0;z--){B=z/m;j=d*(1-B);V=p*Math.sin(B*Math.PI/2);for(K=0,Z=U.length;Z>K;K++){W=i(U[K],q[K],V);c(W.x,W.y,f+j)}for(A=0,D=k.length;D>A;A++){C=k[A];J=et[A];for(K=0,Z=C.length;Z>K;K++){W=i(C[K],J[K],V);if(!x)c(W.x,W.y,f+j);else c(W.x,W.y+T[E-1].y,T[E-1].x+j)}}}o();s()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,a){var o=e.vertices[r].x,s=e.vertices[r].y,l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(o,s),new THREE.Vector2(l,c),new THREE.Vector2(h,u)]},generateBottomUV:function(e,t,i,r,n,a){return this.generateTopUV(e,t,i,r,n,a)},generateSideWallUV:function(e,t,i,r,n,a,o,s){var l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[n].z,u=e.vertices[a].x,f=e.vertices[a].y,d=e.vertices[a].z,p=e.vertices[o].x,m=e.vertices[o].y,v=e.vertices[o].z,g=e.vertices[s].x,E=e.vertices[s].y,y=e.vertices[s].z;if(Math.abs(c-f)<.01)return[new THREE.Vector2(l,1-h),new THREE.Vector2(u,1-d),new THREE.Vector2(p,1-v),new THREE.Vector2(g,1-y)];else return[new THREE.Vector2(c,1-h),new THREE.Vector2(f,1-d),new THREE.Vector2(m,1-v),new THREE.Vector2(E,1-y)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;