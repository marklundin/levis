THREE.ExtrudeGeometry=function(e,t){return"undefined"==typeof e?(e=[],void 0):(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals(),void 0)},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;i>r;r++){var n=e[r];this.addShape(n,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function r(e,t,i){return o(e,t,i)}function n(e,t,i){var r=Math.atan2(t.y-e.y,t.x-e.x),n=Math.atan2(i.y-e.y,i.x-e.x);r>n&&(n+=2*Math.PI);var o=(r+n)/2,a=-Math.cos(o),s=-Math.sin(o),l=new THREE.Vector2(a,s);return l}function o(e,t,i){var r,o,a,s,l,c,h=THREE.ExtrudeGeometry.__v1,u=THREE.ExtrudeGeometry.__v2,d=THREE.ExtrudeGeometry.__v3,p=THREE.ExtrudeGeometry.__v4,f=THREE.ExtrudeGeometry.__v5,m=THREE.ExtrudeGeometry.__v6;return h.set(e.x-t.x,e.y-t.y),u.set(e.x-i.x,e.y-i.y),r=h.normalize(),o=u.normalize(),d.set(-r.y,r.x),p.set(o.y,-o.x),f.copy(e).add(d),m.copy(e).add(p),f.equals(m)?p.clone():(f.copy(t).add(d),m.copy(i).add(p),a=r.dot(p),s=m.sub(f).dot(p),0===a&&(console.log("Either infinite or no solutions!"),0===s?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),l=s/a,0>l?n(e,t,i):(c=r.multiplyScalar(l).add(f),c.sub(e).clone()))}function a(){if(g){var e=0,t=X*e;for(K=0;Y>K;K++)G=O[K],h(G[2]+t,G[1]+t,G[0]+t,!0);for(e=y+2*v,t=X*e,K=0;Y>K;K++)G=O[K],h(G[0]+t,G[1]+t,G[2]+t,!1)}else{for(K=0;Y>K;K++)G=O[K],h(G[2],G[1],G[0],!0);for(K=0;Y>K;K++)G=O[K],h(G[0]+X*y,G[1]+X*y,G[2]+X*y,!1)}}function s(){var e=0;for(l(U,e),e+=U.length,A=0,D=I.length;D>A;A++)C=I[A],l(C,e),e+=C.length}function l(e,t){var i,r;for(K=e.length;--K>=0;){i=K,r=K-1,0>r&&(r=e.length-1);var n=0,o=y+2*v;for(n=0;o>n;n++){var a=X*n,s=X*(n+1),l=t+i+a,c=t+r+a,h=t+r+s,d=t+i+s;u(l,c,h,d,e,n,o,i,r)}}}function c(e,t,i){P.vertices.push(new THREE.Vector3(e,t,i))}function h(i,r,n,o){i+=L,r+=L,n+=L,P.faces.push(new THREE.Face3(i,r,n,null,null,_));var a=o?R.generateBottomUV(P,e,t,i,r,n):R.generateTopUV(P,e,t,i,r,n);P.faceVertexUvs[0].push(a)}function u(i,r,n,o,a,s,l,c,h){i+=L,r+=L,n+=L,o+=L,P.faces.push(new THREE.Face4(i,r,n,o,null,null,b));var u=R.generateSideWallUV(P,e,a,t,i,r,n,o,s,l,c,h);P.faceVertexUvs[0].push(u)}var d,p=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,m=void 0!==t.bevelSize?t.bevelSize:f-2,v=void 0!==t.bevelSegments?t.bevelSegments:3,g=void 0!==t.bevelEnabled?t.bevelEnabled:!0,E=void 0!==t.curveSegments?t.curveSegments:12,y=void 0!==t.steps?t.steps:1,T=t.extrudePath,x=!1,_=t.material,b=t.extrudeMaterial,R=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;var w,H,S,M;T&&(d=T.getSpacedPoints(y),x=!0,g=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,y,!1),H=new THREE.Vector3,S=new THREE.Vector3,M=new THREE.Vector3),g||(v=0,f=0,m=0);var C,A,D,P=this,L=this.vertices.length,N=e.extractPoints(E),F=N.shape,I=N.holes,k=!THREE.Shape.Utils.isClockWise(F);if(k){for(F=F.reverse(),A=0,D=I.length;D>A;A++)C=I[A],THREE.Shape.Utils.isClockWise(C)&&(I[A]=C.reverse());k=!1}var O=THREE.Shape.Utils.triangulateShape(F,I),U=F;for(A=0,D=I.length;D>A;A++)C=I[A],F=F.concat(C);var z,V,B,j,W,G,X=F.length,Y=O.length;U.length,180/Math.PI;for(var q=[],K=0,Z=U.length,Q=Z-1,$=K+1;Z>K;K++,Q++,$++)Q===Z&&(Q=0),$===Z&&($=0),U[K],U[Q],U[$],q[K]=r(U[K],U[Q],U[$]);var J,et=[],tt=q.concat();for(A=0,D=I.length;D>A;A++){for(C=I[A],J=[],K=0,Z=C.length,Q=Z-1,$=K+1;Z>K;K++,Q++,$++)Q===Z&&(Q=0),$===Z&&($=0),J[K]=r(C[K],C[Q],C[$]);et.push(J),tt=tt.concat(J)}for(z=0;v>z;z++){for(B=z/v,j=f*(1-B),V=m*Math.sin(B*Math.PI/2),K=0,Z=U.length;Z>K;K++)W=i(U[K],q[K],V),c(W.x,W.y,-j);for(A=0,D=I.length;D>A;A++)for(C=I[A],J=et[A],K=0,Z=C.length;Z>K;K++)W=i(C[K],J[K],V),c(W.x,W.y,-j)}for(V=m,K=0;X>K;K++)W=g?i(F[K],tt[K],V):F[K],x?(S.copy(w.normals[0]).multiplyScalar(W.x),H.copy(w.binormals[0]).multiplyScalar(W.y),M.copy(d[0]).add(S).add(H),c(M.x,M.y,M.z)):c(W.x,W.y,0);var it;for(it=1;y>=it;it++)for(K=0;X>K;K++)W=g?i(F[K],tt[K],V):F[K],x?(S.copy(w.normals[it]).multiplyScalar(W.x),H.copy(w.binormals[it]).multiplyScalar(W.y),M.copy(d[it]).add(S).add(H),c(M.x,M.y,M.z)):c(W.x,W.y,p/y*it);for(z=v-1;z>=0;z--){for(B=z/v,j=f*(1-B),V=m*Math.sin(B*Math.PI/2),K=0,Z=U.length;Z>K;K++)W=i(U[K],q[K],V),c(W.x,W.y,p+j);for(A=0,D=I.length;D>A;A++)for(C=I[A],J=et[A],K=0,Z=C.length;Z>K;K++)W=i(C[K],J[K],V),x?c(W.x,W.y+d[y-1].y,d[y-1].x+j):c(W.x,W.y,p+j)}a(),s()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){var a=e.vertices[r].x,s=e.vertices[r].y,l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[o].x,u=e.vertices[o].y;return[new THREE.Vector2(a,s),new THREE.Vector2(l,c),new THREE.Vector2(h,u)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s){var l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[n].z,u=e.vertices[o].x,d=e.vertices[o].y,p=e.vertices[o].z,f=e.vertices[a].x,m=e.vertices[a].y,v=e.vertices[a].z,g=e.vertices[s].x,E=e.vertices[s].y,y=e.vertices[s].z;return Math.abs(c-d)<.01?[new THREE.Vector2(l,1-h),new THREE.Vector2(u,1-p),new THREE.Vector2(f,1-v),new THREE.Vector2(g,1-y)]:[new THREE.Vector2(c,1-h),new THREE.Vector2(d,1-p),new THREE.Vector2(m,1-v),new THREE.Vector2(E,1-y)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2;