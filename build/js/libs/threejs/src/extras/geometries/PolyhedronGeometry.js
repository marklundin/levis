THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=s(e)/2/Math.PI+.5;var r=l(e)/Math.PI+.5;t.uv=new THREE.Vector2(i,1-r);return t}function a(e,t,i){var r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()]);r.centroid.add(e).add(t).add(i).divideScalar(3);h.faces.push(r);var n=s(r.centroid);h.faceVertexUvs[0].push([c(e.uv,e,n),c(t.uv,t,n),c(i.uv,i,n)])}function o(e,t){var i=Math.pow(2,t);Math.pow(4,t);var r=n(h.vertices[e.a]);var o=n(h.vertices[e.b]);var s=n(h.vertices[e.c]);var l=[];for(var c=0;i>=c;c++){l[c]=[];var u=n(r.clone().lerp(s,c/i));var f=n(o.clone().lerp(s,c/i));var d=i-c;for(var p=0;d>=p;p++)if(0==p&&c==i)l[c][p]=u;else l[c][p]=n(u.clone().lerp(f,p/d))}for(var c=0;i>c;c++)for(var p=0;2*(i-c)-1>p;p++){var m=Math.floor(p/2);if(0==p%2)a(l[c][m+1],l[c+1][m],l[c][m]);else a(l[c][m+1],l[c+1][m+1],l[c+1][m])}}function s(e){return Math.atan2(e.z,-e.x)}function l(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function c(e,t,i){if(0>i&&1===e.x)e=new THREE.Vector2(e.x-1,e.y);if(0===t.x&&0===t.z)e=new THREE.Vector2(i/2/Math.PI+.5,e.y);return e.clone()}THREE.Geometry.call(this);i=i||1;r=r||0;var h=this;for(var u=0,f=e.length;f>u;u++)n(new THREE.Vector3(e[u][0],e[u][1],e[u][2]));var d=this.vertices;var p=[];for(var u=0,f=t.length;f>u;u++){var m=d[t[u][0]];var v=d[t[u][1]];var g=d[t[u][2]];p[u]=new THREE.Face3(m.index,v.index,g.index,[m.clone(),v.clone(),g.clone()])}for(var u=0,f=p.length;f>u;u++)o(p[u],r);for(var u=0,f=this.faceVertexUvs[0].length;f>u;u++){var E=this.faceVertexUvs[0][u];var y=E[0].x;var T=E[1].x;var x=E[2].x;var _=Math.max(y,Math.max(T,x));var b=Math.min(y,Math.min(T,x));if(_>.9&&.1>b){if(.2>y)E[0].x+=1;if(.2>T)E[1].x+=1;if(.2>x)E[2].x+=1}}for(var u=0,f=this.vertices.length;f>u;u++)this.vertices[u].multiplyScalar(i);this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);