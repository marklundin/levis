THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=i=Math.max(2,Math.floor(i)||6),this.phiStart=r=void 0!==r?r:0,this.phiLength=n=void 0!==n?n:2*Math.PI,this.thetaStart=o=void 0!==o?o:0,this.thetaLength=a=void 0!==a?a:Math.PI;var s,l,c=[],h=[];for(l=0;i>=l;l++){var u=[],d=[];for(s=0;t>=s;s++){var p=s/t,f=l/i,m=new THREE.Vector3;m.x=-e*Math.cos(r+p*n)*Math.sin(o+f*a),m.y=e*Math.cos(o+f*a),m.z=e*Math.sin(r+p*n)*Math.sin(o+f*a),this.vertices.push(m),u.push(this.vertices.length-1),d.push(new THREE.Vector2(p,1-f))}c.push(u),h.push(d)}for(l=0;l<this.heightSegments;l++)for(s=0;s<this.widthSegments;s++){var v=c[l][s+1],g=c[l][s],E=c[l+1][s],y=c[l+1][s+1],T=this.vertices[v].clone().normalize(),x=this.vertices[g].clone().normalize(),_=this.vertices[E].clone().normalize(),b=this.vertices[y].clone().normalize(),R=h[l][s+1].clone(),w=h[l][s].clone(),H=h[l+1][s].clone(),S=h[l+1][s+1].clone();Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(v,E,y,[T,_,b])),this.faceVertexUvs[0].push([R,H,S])):Math.abs(this.vertices[E].y)===this.radius?(this.faces.push(new THREE.Face3(v,g,E,[T,x,_])),this.faceVertexUvs[0].push([R,w,H])):(this.faces.push(new THREE.Face4(v,g,E,y,[T,x,_,b])),this.faceVertexUvs[0].push([R,w,H,S]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);