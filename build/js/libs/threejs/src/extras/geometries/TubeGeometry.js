THREE.TubeGeometry=function(e,t,i,r,n){function o(e,t,i){return H.vertices.push(new THREE.Vector3(e,t,i))-1}THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radialSegments=r||8,this.closed=n||!1,this.grid=[];var a,s,l,c,h,u,d,p,f,m,v,g,E,y,T,x,b,_,R,w,H=this,S=this.segments+1,M=new THREE.Vector3,C=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),A=C.tangents,D=C.normals,P=C.binormals;for(this.tangents=A,this.normals=D,this.binormals=P,f=0;S>f;f++)for(this.grid[f]=[],c=f/(S-1),p=e.getPointAt(c),a=A[f],s=D[f],l=P[f],m=0;m<this.radialSegments;m++)h=2*(m/this.radialSegments)*Math.PI,u=-this.radius*Math.cos(h),d=this.radius*Math.sin(h),M.copy(p),M.x+=u*s.x+d*l.x,M.y+=u*s.y+d*l.y,M.z+=u*s.z+d*l.z,this.grid[f][m]=o(M.x,M.y,M.z);for(f=0;f<this.segments;f++)for(m=0;m<this.radialSegments;m++)v=this.closed?(f+1)%this.segments:f+1,g=(m+1)%this.radialSegments,E=this.grid[f][m],y=this.grid[v][m],T=this.grid[v][g],x=this.grid[f][g],b=new THREE.Vector2(f/this.segments,m/this.radialSegments),_=new THREE.Vector2((f+1)/this.segments,m/this.radialSegments),R=new THREE.Vector2((f+1)/this.segments,(m+1)/this.radialSegments),w=new THREE.Vector2(f/this.segments,(m+1)/this.radialSegments),this.faces.push(new THREE.Face4(E,y,T,x)),this.faceVertexUvs[0].push([b,_,R,w]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){function r(){p[0]=new THREE.Vector3,f[0]=new THREE.Vector3,o=Number.MAX_VALUE,a=Math.abs(d[0].x),s=Math.abs(d[0].y),l=Math.abs(d[0].z),o>=a&&(o=a,u.set(1,0,0)),o>=s&&(o=s,u.set(0,1,0)),o>=l&&u.set(0,0,1),m.crossVectors(d[0],u).normalize(),p[0].crossVectors(d[0],m),f[0].crossVectors(d[0],p[0])}var n,o,a,s,l,c,h,u=(new THREE.Vector3,new THREE.Vector3),d=(new THREE.Vector3,[]),p=[],f=[],m=new THREE.Vector3,v=new THREE.Matrix4,g=t+1,E=1e-4;for(this.tangents=d,this.normals=p,this.binormals=f,c=0;g>c;c++)h=c/(g-1),d[c]=e.getTangentAt(h),d[c].normalize();for(r(),c=1;g>c;c++)p[c]=p[c-1].clone(),f[c]=f[c-1].clone(),m.crossVectors(d[c-1],d[c]),m.length()>E&&(m.normalize(),n=Math.acos(THREE.Math.clamp(d[c-1].dot(d[c]),-1,1)),p[c].applyMatrix4(v.makeRotationAxis(m,n))),f[c].crossVectors(d[c],p[c]);if(i)for(n=Math.acos(THREE.Math.clamp(p[0].dot(p[g-1]),-1,1)),n/=g-1,d[0].dot(m.crossVectors(p[0],p[g-1]))>0&&(n=-n),c=1;g>c;c++)p[c].applyMatrix4(v.makeRotationAxis(d[c],n*c)),f[c].crossVectors(d[c],p[c])};