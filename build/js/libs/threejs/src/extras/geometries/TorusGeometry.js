THREE.TorusGeometry=function(e,t,i,r,o){THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=o||2*Math.PI;for(var n=new THREE.Vector3,a=[],s=[],l=0;l<=this.radialSegments;l++)for(var c=0;c<=this.tubularSegments;c++){var h=c/this.tubularSegments*this.arc,u=2*l/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(h),n.y=this.radius*Math.sin(h);var d=new THREE.Vector3;d.x=(this.radius+this.tube*Math.cos(u))*Math.cos(h),d.y=(this.radius+this.tube*Math.cos(u))*Math.sin(h),d.z=this.tube*Math.sin(u),this.vertices.push(d),a.push(new THREE.Vector2(c/this.tubularSegments,l/this.radialSegments)),s.push(d.clone().sub(n).normalize())}for(var l=1;l<=this.radialSegments;l++)for(var c=1;c<=this.tubularSegments;c++){var p=(this.tubularSegments+1)*l+c-1,f=(this.tubularSegments+1)*(l-1)+c-1,m=(this.tubularSegments+1)*(l-1)+c,v=(this.tubularSegments+1)*l+c,g=new THREE.Face4(p,f,m,v,[s[p],s[f],s[m],s[v]]);g.normal.add(s[p]),g.normal.add(s[f]),g.normal.add(s[m]),g.normal.add(s[v]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([a[p].clone(),a[f].clone(),a[m].clone(),a[v].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);