THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);if(e instanceof Array==!1)e=[e];this.shapebb=e[e.length-1].getBoundingBox();this.addShapeList(e,t);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;r>i;i++)this.addShape(e[i],t);return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){if(void 0===t)t={};var i=void 0!==t.curveSegments?t.curveSegments:12;var r=t.material;var n=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator;this.shapebb;var a,o,s;var l=this.vertices.length;var c=e.extractPoints(i);var h=c.shape;var u=c.holes;var f=!THREE.Shape.Utils.isClockWise(h);if(f){h=h.reverse();for(a=0,o=u.length;o>a;a++){s=u[a];if(THREE.Shape.Utils.isClockWise(s))u[a]=s.reverse()}f=!1}var d=THREE.Shape.Utils.triangulateShape(h,u);var p=h;for(a=0,o=u.length;o>a;a++){s=u[a];h=h.concat(s)}var m,v=h.length;var g,E=d.length;p.length;for(a=0;v>a;a++){m=h[a];this.vertices.push(new THREE.Vector3(m.x,m.y,0))}for(a=0;E>a;a++){g=d[a];var y=g[0]+l;var T=g[1]+l;var x=g[2]+l;this.faces.push(new THREE.Face3(y,T,x,null,null,r));this.faceVertexUvs[0].push(n.generateBottomUV(this,e,t,y,T,x))}};