THREE.Projector=function(){function e(){if(c===_){var e=new THREE.RenderableObject;return T.push(e),_++,c++,e}return T[c++]}function t(){if(u===x){var e=new THREE.RenderableVertex;return b.push(e),x++,u++,e}return b[u++]}function i(){if(p===w){var e=new THREE.RenderableFace3;return R.push(e),w++,p++,e}return R[p++]}function r(){if(f===S){var e=new THREE.RenderableFace4;return H.push(e),S++,f++,e}return H[f++]}function o(){if(v===C){var e=new THREE.RenderableLine;return M.push(e),C++,v++,e}return M[v++]}function n(){if(E===D){var e=new THREE.RenderableParticle;return A.push(e),D++,E++,e}return A[E++]}function a(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function s(e,t){var i=0,r=1,o=e.z+e.w,n=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return o>=0&&n>=0&&a>=0&&s>=0?!0:0>o&&0>n||0>a&&0>s?!1:(0>o?i=Math.max(i,o/(o-n)):0>n&&(r=Math.min(r,o/(o-n))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(e.lerp(t,i),t.lerp(e,1-r),!0))}var l,c,h,u,d,p,f,m,v,g,E,y,T=[],_=0,b=[],x=0,R=[],w=0,H=[],S=0,M=[],C=0,A=[],D=0,P={objects:[],sprites:[],lights:[],elements:[]},L=new THREE.Vector3,N=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),k=new THREE.Box3,I=new Array(3),O=new Array(4),U=new THREE.Matrix4,z=new THREE.Matrix4,B=new THREE.Matrix4,V=new THREE.Matrix3,j=new THREE.Matrix3,W=new THREE.Vector3,G=new THREE.Frustum,X=new THREE.Vector4,Y=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),z.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(z)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),z.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(z)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)};var q=function(t){return l=e(),l.id=t.id,l.object=t,null!==t.renderDepth?l.z=t.renderDepth:(L.getPositionFromMatrix(t.matrixWorld),L.applyProjection(z),l.z=L.z),l},K=function(e){if(e.visible!==!1){e instanceof THREE.Light?P.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(e.frustumCulled===!1||G.intersectsObject(e)===!0)&&P.objects.push(q(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&P.sprites.push(q(e));for(var t=0,i=e.children.length;i>t;t++)K(e.children[t])}},Z=function(e,t){c=0,P.objects.length=0,P.sprites.length=0,P.lights.length=0,K(e),t===!0&&P.objects.sort(a)};this.projectScene=function(e,l,c,T){var _,x,R,w,H,S,M,C,A,D,L,q,K,Q,$,J,et,tt,it,rt,ot,nt,at,st,lt,ct,ht=!1;for(p=0,f=0,v=0,E=0,P.elements.length=0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===l.parent&&l.updateMatrixWorld(),U.copy(l.matrixWorldInverse.getInverse(l.matrixWorld)),z.multiplyMatrices(l.projectionMatrix,U),j.getNormalMatrix(U),G.setFromMatrix(z),Z(e,c),_=0,x=P.objects.length;x>_;_++)if(K=P.objects[_].object,y=K.matrixWorld,u=0,K instanceof THREE.Mesh){for(Q=K.geometry,$=Q.vertices,J=Q.faces,it=Q.faceVertexUvs,V.getNormalMatrix(y),lt=K.material instanceof THREE.MeshFaceMaterial,ct=lt===!0?K.material:null,R=0,w=$.length;w>R;R++){h=t(),h.positionWorld.copy($[R]).applyMatrix4(y),h.positionScreen.copy(h.positionWorld).applyMatrix4(z);var ut=1/h.positionScreen.w;h.positionScreen.x*=ut,h.positionScreen.y*=ut,h.positionScreen.z*=ut,h.visible=!(h.positionScreen.x<-1||h.positionScreen.x>1||h.positionScreen.y<-1||h.positionScreen.y>1||h.positionScreen.z<-1||h.positionScreen.z>1)}for(H=0,S=J.length;S>H;H++){et=J[H];var dt=lt===!0?ct.materials[et.materialIndex]:K.material;if(void 0!==dt){var pt=dt.side;if(et instanceof THREE.Face3){if(ot=b[et.a],nt=b[et.b],at=b[et.c],I[0]=ot.positionScreen,I[1]=nt.positionScreen,I[2]=at.positionScreen,ot.visible!==!0&&nt.visible!==!0&&at.visible!==!0&&!F.isIntersectionBox(k.setFromPoints(I)))continue;if(ht=(at.positionScreen.x-ot.positionScreen.x)*(nt.positionScreen.y-ot.positionScreen.y)-(at.positionScreen.y-ot.positionScreen.y)*(nt.positionScreen.x-ot.positionScreen.x)<0,pt!==THREE.DoubleSide&&ht!==(pt===THREE.FrontSide))continue;d=i(),d.id=K.id,d.v1.copy(ot),d.v2.copy(nt),d.v3.copy(at)}else if(et instanceof THREE.Face4){if(ot=b[et.a],nt=b[et.b],at=b[et.c],st=b[et.d],O[0]=ot.positionScreen,O[1]=nt.positionScreen,O[2]=at.positionScreen,O[3]=st.positionScreen,ot.visible!==!0&&nt.visible!==!0&&at.visible!==!0&&st.visible!==!0&&!F.isIntersectionBox(k.setFromPoints(O)))continue;if(ht=(st.positionScreen.x-ot.positionScreen.x)*(nt.positionScreen.y-ot.positionScreen.y)-(st.positionScreen.y-ot.positionScreen.y)*(nt.positionScreen.x-ot.positionScreen.x)<0||(nt.positionScreen.x-at.positionScreen.x)*(st.positionScreen.y-at.positionScreen.y)-(nt.positionScreen.y-at.positionScreen.y)*(st.positionScreen.x-at.positionScreen.x)<0,pt!==THREE.DoubleSide&&ht!==(pt===THREE.FrontSide))continue;d=r(),d.id=K.id,d.v1.copy(ot),d.v2.copy(nt),d.v3.copy(at),d.v4.copy(st)}for(d.normalModel.copy(et.normal),ht!==!1||pt!==THREE.BackSide&&pt!==THREE.DoubleSide||d.normalModel.negate(),d.normalModel.applyMatrix3(V).normalize(),d.normalModelView.copy(d.normalModel).applyMatrix3(j),d.centroidModel.copy(et.centroid).applyMatrix4(y),tt=et.vertexNormals,M=0,C=tt.length;C>M;M++){var ft=d.vertexNormalsModel[M];ft.copy(tt[M]),ht!==!1||pt!==THREE.BackSide&&pt!==THREE.DoubleSide||ft.negate(),ft.applyMatrix3(V).normalize();var mt=d.vertexNormalsModelView[M];mt.copy(ft).applyMatrix3(j)}for(d.vertexNormalsLength=tt.length,A=0,D=it.length;D>A;A++)if(rt=it[A][H],void 0!==rt)for(L=0,q=rt.length;q>L;L++)d.uvs[A][L]=rt[L];d.color=et.color,d.material=dt,W.copy(d.centroidModel).applyProjection(z),d.z=W.z,P.elements.push(d)}}}else if(K instanceof THREE.Line){B.multiplyMatrices(z,y),$=K.geometry.vertices,ot=t(),ot.positionScreen.copy($[0]).applyMatrix4(B);var vt=K.type===THREE.LinePieces?2:1;for(R=1,w=$.length;w>R;R++)ot=t(),ot.positionScreen.copy($[R]).applyMatrix4(B),(R+1)%vt>0||(nt=b[u-2],X.copy(ot.positionScreen),Y.copy(nt.positionScreen),s(X,Y)===!0&&(X.multiplyScalar(1/X.w),Y.multiplyScalar(1/Y.w),m=o(),m.id=K.id,m.v1.positionScreen.copy(X),m.v2.positionScreen.copy(Y),m.z=Math.max(X.z,Y.z),m.material=K.material,K.material.vertexColors===THREE.VertexColors&&(m.vertexColors[0].copy(K.geometry.colors[R]),m.vertexColors[1].copy(K.geometry.colors[R-1])),P.elements.push(m)))}for(_=0,x=P.sprites.length;x>_;_++)if(K=P.sprites[_].object,y=K.matrixWorld,K instanceof THREE.Particle){N.set(y.elements[12],y.elements[13],y.elements[14],1),N.applyMatrix4(z);var ut=1/N.w;N.z*=ut,N.z>0&&N.z<1&&(g=n(),g.id=K.id,g.x=N.x*ut,g.y=N.y*ut,g.z=N.z,g.object=K,g.rotation=K.rotation.z,g.scale.x=K.scale.x*Math.abs(g.x-(N.x+l.projectionMatrix.elements[0])/(N.w+l.projectionMatrix.elements[12])),g.scale.y=K.scale.y*Math.abs(g.y-(N.y+l.projectionMatrix.elements[5])/(N.w+l.projectionMatrix.elements[13])),g.material=K.material,P.elements.push(g))}return T===!0&&P.elements.sort(a),P}};