THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=!1;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t;var i;if(this.attributes["position"])t=this.attributes["position"].array;if(this.attributes["normal"])i=this.attributes["normal"].array;if(void 0!==t){e.multiplyVector3Array(t);this.verticesNeedUpdate=!0}if(void 0!==i){var r=(new THREE.Matrix3).getNormalMatrix(e);r.multiplyVector3Array(i);this.normalizeNormals();this.normalsNeedUpdate=!0}},computeBoundingBox:function(){if(null===this.boundingBox)this.boundingBox=new THREE.Box3;var e=this.attributes["position"].array;if(e){var t=this.boundingBox;var i,r,n;if(e.length>=3){t.min.x=t.max.x=e[0];t.min.y=t.max.y=e[1];t.min.z=t.max.z=e[2]}for(var o=3,a=e.length;a>o;o+=3){i=e[o];r=e[o+1];n=e[o+2];if(i<t.min.x)t.min.x=i;else if(i>t.max.x)t.max.x=i;if(r<t.min.y)t.min.y=r;else if(r>t.max.y)t.max.y=r;if(n<t.min.z)t.min.z=n;else if(n>t.max.z)t.max.z=n}}if(void 0===e||0===e.length){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){if(null===this.boundingSphere)this.boundingSphere=new THREE.Sphere;var e=this.attributes["position"].array;if(e){var t,i=0;var r,n,o;for(var a=0,s=e.length;s>a;a+=3){r=e[a];n=e[a+1];o=e[a+2];t=r*r+n*n+o*o;if(t>i)i=t}this.boundingSphere.radius=Math.sqrt(i)}},computeVertexNormals:function(){if(this.attributes["position"]){var e,t;var i,r;var n=this.attributes["position"].array.length;if(void 0===this.attributes["normal"])this.attributes["normal"]={itemSize:3,array:new Float32Array(n)};else for(e=0,t=this.attributes["normal"].array.length;t>e;e++)this.attributes["normal"].array[e]=0;var o=this.attributes["position"].array;var a=this.attributes["normal"].array;var s,l,c,h,u,f,d=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,v=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes["index"]){var E=this.attributes["index"].array;var y=this.offsets;for(i=0,r=y.length;r>i;++i){var T=y[i].start;var _=y[i].count;var b=y[i].index;for(e=T,t=T+_;t>e;e+=3){s=b+E[e];l=b+E[e+1];c=b+E[e+2];h=o[3*s];u=o[3*s+1];f=o[3*s+2];d.set(h,u,f);h=o[3*l];u=o[3*l+1];f=o[3*l+2];p.set(h,u,f);h=o[3*c];u=o[3*c+1];f=o[3*c+2];m.set(h,u,f);v.subVectors(m,p);g.subVectors(d,p);v.cross(g);a[3*s]+=v.x;a[3*s+1]+=v.y;a[3*s+2]+=v.z;a[3*l]+=v.x;a[3*l+1]+=v.y;a[3*l+2]+=v.z;a[3*c]+=v.x;a[3*c+1]+=v.y;a[3*c+2]+=v.z}}}else for(e=0,t=o.length;t>e;e+=9){h=o[e];u=o[e+1];f=o[e+2];d.set(h,u,f);h=o[e+3];u=o[e+4];f=o[e+5];p.set(h,u,f);h=o[e+6];u=o[e+7];f=o[e+8];m.set(h,u,f);v.subVectors(m,p);g.subVectors(d,p);v.cross(g);a[e]=v.x;a[e+1]=v.y;a[e+2]=v.z;a[e+3]=v.x;a[e+4]=v.y;a[e+5]=v.z;a[e+6]=v.x;a[e+7]=v.y;a[e+8]=v.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){var e=this.attributes["normal"].array;var t,i,r,n;for(var o=0,a=e.length;a>o;o+=3){t=e[o];i=e[o+1];r=e[o+2];n=1/Math.sqrt(t*t+i*i+r*r);e[o]*=n;e[o+1]*=n;e[o+2]*=n}},computeTangents:function(){function e(e,t,i){f=r[3*e];d=r[3*e+1];p=r[3*e+2];m=r[3*t];v=r[3*t+1];g=r[3*t+2];E=r[3*i];y=r[3*i+1];T=r[3*i+2];_=o[2*e];b=o[2*e+1];x=o[2*t];R=o[2*t+1];w=o[2*i];H=o[2*i+1];S=m-f;M=E-f;C=v-d;A=y-d;D=g-p;P=T-p;L=x-_;N=w-_;k=R-b;F=H-b;I=1/(L*F-N*k);O.set((F*S-k*M)*I,(F*C-k*A)*I,(F*D-k*P)*I);U.set((L*M-N*S)*I,(L*A-N*C)*I,(L*P-N*D)*I);c[e].add(O);c[t].add(O);c[i].add(O);h[e].add(U);h[t].add(U);h[i].add(U)}function t(e){J.x=n[3*e];J.y=n[3*e+1];J.z=n[3*e+2];et.copy(J);it=c[e];Q.copy(it);Q.sub(J.multiplyScalar(J.dot(it))).normalize();$.crossVectors(et,it);rt=$.dot(h[e]);tt=0>rt?-1:1;l[4*e]=Q.x;l[4*e+1]=Q.y;l[4*e+2]=Q.z;l[4*e+3]=tt}if(void 0!==this.attributes["index"]&&void 0!==this.attributes["position"]&&void 0!==this.attributes["normal"]&&void 0!==this.attributes["uv"]){var i=this.attributes["index"].array;var r=this.attributes["position"].array;var n=this.attributes["normal"].array;var o=this.attributes["uv"].array;var a=r.length/3;if(void 0===this.attributes["tangent"]){var s=4*a;this.attributes["tangent"]={itemSize:4,array:new Float32Array(s)}}var l=this.attributes["tangent"].array;var c=[],h=[];for(var u=0;a>u;u++){c[u]=new THREE.Vector3;h[u]=new THREE.Vector3}var f,d,p,m,v,g,E,y,T,_,b,x,R,w,H,S,M,C,A,D,P,L,N,k,F,I;var O=new THREE.Vector3,U=new THREE.Vector3;var z,B;var V,j;var G,W,X;var Y=this.offsets;for(V=0,j=Y.length;j>V;++V){var q=Y[V].start;var K=Y[V].count;var Z=Y[V].index;for(z=q,B=q+K;B>z;z+=3){G=Z+i[z];W=Z+i[z+1];X=Z+i[z+2];e(G,W,X)}}var Q=new THREE.Vector3,$=new THREE.Vector3;var J=new THREE.Vector3,et=new THREE.Vector3;var tt,it,rt;for(V=0,j=Y.length;j>V;++V){var q=Y[V].start;var K=Y[V].count;var Z=Y[V].index;for(z=q,B=q+K;B>z;z+=3){G=Z+i[z];W=Z+i[z+1];X=Z+i[z+2];t(G);t(W);t(X)}}this.hasTangents=!0;this.tangentsNeedUpdate=!0}else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);