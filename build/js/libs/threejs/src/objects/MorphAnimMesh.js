THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t);this.duration=1e3;this.mirroredLoop=!1;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;if(!e.animations)e.animations={};var t,i=e.animations;var r=/([a-z]+)(\d+)/;for(var a=0,n=e.morphTargets.length;n>a;a++){var o=e.morphTargets[a];var s=o.name.match(r);if(s&&s.length>1){var l=s[1];s[2];if(!i[l])i[l]={start:1/0,end:-1/0};var c=i[l];if(a<c.start)c.start=a;if(a>c.end)c.end=a;if(!t)t=l}}e.firstAnimation=t};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[e]={start:t,end:i}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];if(i){this.setFrameRange(i.start,i.end);this.duration=1e3*((i.end-i.start)/t);this.time=0}else console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=!0}if(this.time<0){this.time=0;this.directionBackwards=!1}}}else{this.time=this.time%this.duration;if(this.time<0)this.time+=this.duration}var i=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);if(i!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[i]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=i}var r=this.time%t/t;if(this.directionBackwards)r=1-r;this.morphTargetInfluences[this.currentKeyframe]=r;this.morphTargetInfluences[this.lastKeyframe]=1-r};THREE.MorphAnimMesh.prototype.clone=function(e){if(void 0===e)e=new THREE.MorphAnimMesh(this.geometry,this.material);e.duration=this.duration;e.mirroredLoop=this.mirroredLoop;e.time=this.time;e.lastKeyframe=this.lastKeyframe;e.currentKeyframe=this.currentKeyframe;e.direction=this.direction;e.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,e);return e};