THREE.Quaternion=function(e,t,i,r){this._x=e||0;this._y=t||0;this._z=i||0;this._w=void 0!==r?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){if(void 0!==this._euler)this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e;this._updateEuler()},get y(){return this._y},set y(e){this._y=e;this._updateEuler()},get z(){return this._z},set z(e){this._z=e;this._updateEuler()},get w(){return this._w},set w(e){this._w=e;this._updateEuler()},set:function(e,t,i,r){this._x=e;this._y=t;this._z=i;this._w=r;this._updateEuler();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._w=e._w;this._updateEuler();return this},setFromEuler:function(e,t){if(void 0===typeof e["order"])console.error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(e._x/2);var r=Math.cos(e._y/2);var a=Math.cos(e._z/2);var n=Math.sin(e._x/2);var o=Math.sin(e._y/2);var s=Math.sin(e._z/2);if(void 0===e.order||"XYZ"===e.order){this._x=n*r*a+i*o*s;this._y=i*o*a-n*r*s;this._z=i*r*s+n*o*a;this._w=i*r*a-n*o*s}else if("YXZ"===e.order){this._x=n*r*a+i*o*s;this._y=i*o*a-n*r*s;this._z=i*r*s-n*o*a;this._w=i*r*a+n*o*s}else if("ZXY"===e.order){this._x=n*r*a-i*o*s;this._y=i*o*a+n*r*s;this._z=i*r*s+n*o*a;this._w=i*r*a-n*o*s}else if("ZYX"===e.order){this._x=n*r*a-i*o*s;this._y=i*o*a+n*r*s;this._z=i*r*s-n*o*a;this._w=i*r*a+n*o*s}else if("YZX"===e.order){this._x=n*r*a+i*o*s;this._y=i*o*a+n*r*s;this._z=i*r*s-n*o*a;this._w=i*r*a-n*o*s}else if("XZY"===e.order){this._x=n*r*a-i*o*s;this._y=i*o*a-n*r*s;this._z=i*r*s+n*o*a;this._w=i*r*a+n*o*s}if(t!==!1)this._updateEuler();return this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);this._x=e.x*r;this._y=e.y*r;this._z=e.z*r;this._w=Math.cos(i);this._updateEuler();return this},setFromRotationMatrix:function(e){var t,i=e.elements,r=i[0],a=i[4],n=i[8],o=i[1],s=i[5],l=i[9],c=i[2],h=i[6],u=i[10],f=r+s+u;if(f>0){t=.5/Math.sqrt(f+1);this._w=.25/t;this._x=(h-l)*t;this._y=(n-c)*t;this._z=(o-a)*t}else if(r>s&&r>u){t=2*Math.sqrt(1+r-s-u);this._w=(h-l)/t;this._x=.25*t;this._y=(a+o)/t;this._z=(n+c)/t}else if(s>u){t=2*Math.sqrt(1+s-r-u);this._w=(n-c)/t;this._x=(a+o)/t;this._y=.25*t;this._z=(l+h)/t}else{t=2*Math.sqrt(1+u-r-s);this._w=(o-a)/t;this._x=(n+c)/t;this._y=(l+h)/t;this._z=.25*t}this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();if(0===e){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}return this},multiply:function(e,t){if(void 0!==t){console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(e,t)}return this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e._x,r=e._y,a=e._z,n=e._w;var o=t._x,s=t._y,l=t._z,c=t._w;this._x=i*c+n*o+r*l-a*s;this._y=r*c+n*s+a*o-i*l;this._z=a*c+n*l+i*s-r*o;this._w=n*c-i*o-r*s-a*l;this._updateEuler();return this},multiplyVector3:function(e){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},slerp:function(e,t){var i=this._x,r=this._y,a=this._z,n=this._w;var o=n*e._w+i*e._x+r*e._y+a*e._z;if(0>o){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;o=-o}else this.copy(e);if(o>=1){this._w=n;this._x=i;this._y=r;this._z=a;return this}var s=Math.acos(o);var l=Math.sqrt(1-o*o);if(Math.abs(l)<.001){this._w=.5*(n+this._w);this._x=.5*(i+this._x);this._y=.5*(r+this._y);this._z=.5*(a+this._z);return this}var c=Math.sin((1-t)*s)/l,h=Math.sin(t*s)/l;this._w=n*c+this._w*h;this._x=i*c+this._x*h;this._y=r*c+this._y*h;this._z=a*c+this._z*h;this._updateEuler();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];this._w=e[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)};