THREE.Vector3=function(e,t,i){this.x=e||0;this.y=t||0;this.z=i||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){this.x=e;this.y=t;this.z=i;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(void 0!==t){console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},sub:function(e,t){if(void 0!==t){console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(void 0!==t){console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(e,t)}this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyMatrix3:function(e){var t=this.x;var i=this.y;var r=this.z;var a=e.elements;this.x=a[0]*t+a[3]*i+a[6]*r;this.y=a[1]*t+a[4]*i+a[7]*r;this.z=a[2]*t+a[5]*i+a[8]*r;return this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z;var a=e.elements;this.x=a[0]*t+a[4]*i+a[8]*r+a[12];this.y=a[1]*t+a[5]*i+a[9]*r+a[13];this.z=a[2]*t+a[6]*i+a[10]*r+a[14];return this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z;var a=e.elements;var n=1/(a[3]*t+a[7]*i+a[11]*r+a[15]);this.x=(a[0]*t+a[4]*i+a[8]*r+a[12])*n;this.y=(a[1]*t+a[5]*i+a[9]*r+a[13])*n;this.z=(a[2]*t+a[6]*i+a[10]*r+a[14])*n;return this},applyQuaternion:function(e){var t=this.x;var i=this.y;var r=this.z;var a=e.x;var n=e.y;var o=e.z;var s=e.w;var l=s*t+n*r-o*i;var c=s*i+o*t-a*r;var h=s*r+a*i-n*t;var u=-a*t-n*i-o*r;this.x=l*s+u*-a+c*-o-h*-n;this.y=c*s+u*-n+h*-a-l*-o;this.z=h*s+u*-o+l*-n-c*-a;return this},transformDirection:function(e){var t=this.x,i=this.y,r=this.z;var a=e.elements;this.x=a[0]*t+a[4]*i+a[8]*r;this.y=a[1]*t+a[5]*i+a[9]*r;this.z=a[2]*t+a[6]*i+a[10]*r;this.normalize();return this},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t;this.y*=t;this.z*=t}else{this.x=0;this.y=0;this.z=0}return this},min:function(e){if(this.x>e.x)this.x=e.x;if(this.y>e.y)this.y=e.y;if(this.z>e.z)this.z=e.z;return this},max:function(e){if(this.x<e.x)this.x=e.x;if(this.y<e.y)this.y=e.y;if(this.z<e.z)this.z=e.z;return this},clamp:function(e,t){if(this.x<e.x)this.x=e.x;else if(this.x>t.x)this.x=t.x;if(this.y<e.y)this.y=e.y;else if(this.y>t.y)this.y=t.y;if(this.z<e.z)this.z=e.z;else if(this.z>t.z)this.z=t.z;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();if(0!==t&&e!==t)this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},cross:function(e,t){if(void 0!==t){console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(e,t)}var i=this.x,r=this.y,a=this.z;this.x=r*e.z-a*e.y;this.y=a*e.x-i*e.z;this.z=i*e.y-r*e.x;return this},crossVectors:function(e,t){this.x=e.y*t.z-e.z*t.y;this.y=e.z*t.x-e.x*t.z;this.z=e.x*t.y-e.y*t.x;return this},angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;var i=this.y-e.y;var r=this.z-e.z;return t*t+i*i+r*r},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){this.x=e.elements[12];this.y=e.elements[13];this.z=e.elements[14];return this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length();var i=this.set(e.elements[4],e.elements[5],e.elements[6]).length();var r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t;this.y=i;this.z=r;return this},getColumnFromMatrix:function(e,t){var i=4*e;var r=t.elements;this.x=r[i];this.y=r[i+1];this.z=r[i+2];return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){if(void 0===typeof t["order"])console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=e.setFromEuler(t);this.applyQuaternion(i);return this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,i){var r=e.setFromAxisAngle(t,i);this.applyQuaternion(r);return this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){e.copy(t).normalize();var i=this.dot(e);return this.copy(e).multiplyScalar(i)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){e.copy(this).projectOnVector(t);return this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){e.copy(this).projectOnVector(t).multiplyScalar(2);return this.subVectors(e,this)}}()});