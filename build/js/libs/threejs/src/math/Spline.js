THREE.Spline=function(e){function t(e,t,i,r,a,n,o){var s=.5*(i-e),l=.5*(r-t);return(2*(t-i)+s+l)*o+(-3*(t-i)-2*s-l)*n+s*a+t}this.points=e;var i,r,a,n,o,s,l,c,h,u=[],f={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}};this.getPoint=function(e){i=(this.points.length-1)*e;r=Math.floor(i);a=i-r;u[0]=0===r?r:r-1;u[1]=r;u[2]=r>this.points.length-2?this.points.length-1:r+1;u[3]=r>this.points.length-3?this.points.length-1:r+2;s=this.points[u[0]];l=this.points[u[1]];c=this.points[u[2]];h=this.points[u[3]];n=a*a;o=a*n;f.x=t(s.x,l.x,c.x,h.x,a,n,o);f.y=t(s.y,l.y,c.y,h.y,a,n,o);f.z=t(s.z,l.z,c.z,h.z,a,n,o);return f};this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;i>e;e++){t=this.points[e];r[e]=[t.x,t.y,t.z]}return r};this.getLength=function(e){var t,i,r,a,n=0,o=0,s=0,l=new THREE.Vector3,c=new THREE.Vector3,h=[],u=0;h[0]=0;if(!e)e=100;r=this.points.length*e;l.copy(this.points[0]);for(t=1;r>t;t++){i=t/r;a=this.getPoint(i);c.copy(a);u+=c.distanceTo(l);l.copy(a);n=(this.points.length-1)*i;o=Math.floor(n);if(o!=s){h[o]=u;s=o}}h[h.length]=u;return{chunks:h,total:u}};this.reparametrizeByArcLength=function(e){var t,i,r,a,n,o,s,l,c=[],h=new THREE.Vector3,u=this.getLength();c.push(h.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){o=u.chunks[t]-u.chunks[t-1];s=Math.ceil(e*o/u.total);a=(t-1)/(this.points.length-1);n=t/(this.points.length-1);for(i=1;s-1>i;i++){r=a+i*(1/s)*(n-a);l=this.getPoint(r);c.push(h.copy(l).clone())}c.push(h.copy(this.points[t]).clone())}this.points=c}};