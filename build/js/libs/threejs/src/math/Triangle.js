THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==t?t:new THREE.Vector3;this.c=void 0!==i?i:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,i,r,a){var n=a||new THREE.Vector3;n.subVectors(r,i);e.subVectors(t,i);n.cross(e);var o=n.lengthSq();if(o>0)return n.multiplyScalar(1/Math.sqrt(o));else return n.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var i=new THREE.Vector3;return function(r,a,n,o,s){e.subVectors(o,a);t.subVectors(n,a);i.subVectors(r,a);var l=e.dot(e);var c=e.dot(t);var h=e.dot(i);var u=t.dot(t);var f=t.dot(i);var d=l*u-c*c;var p=s||new THREE.Vector3;if(0==d)return p.set(-2,-1,-1);var m=1/d;var v=(u*h-c*f)*m;var g=(l*f-c*h)*m;return p.set(1-v-g,g,v)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,i,r,a){var n=THREE.Triangle.barycoordFromPoint(t,i,r,a,e);return n.x>=0&&n.y>=0&&n.x+n.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,i){this.a.copy(e);this.b.copy(t);this.c.copy(i);return this},setFromPointsAndIndices:function(e,t,i,r){this.a.copy(e[t]);this.b.copy(e[i]);this.c.copy(e[r]);return this},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};