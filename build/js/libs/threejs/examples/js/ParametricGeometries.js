THREE.ParametricGeometries={klein:function(e,t){t*=Math.PI,e*=2*Math.PI,t=2*t;var i,r,n;return t<Math.PI?(i=3*Math.cos(t)*(1+Math.sin(t))+2*(1-Math.cos(t)/2)*Math.cos(t)*Math.cos(e),n=-8*Math.sin(t)-2*(1-Math.cos(t)/2)*Math.sin(t)*Math.cos(e)):(i=3*Math.cos(t)*(1+Math.sin(t))+2*(1-Math.cos(t)/2)*Math.cos(e+Math.PI),n=-8*Math.sin(t)),r=-2*(1-Math.cos(t)/2)*Math.sin(e),new THREE.Vector3(i,r,n)},plane:function(e,t){return function(i,r){var n=i*e,o=0,a=r*t;return new THREE.Vector3(n,o,a)}},mobius:function(e,t){e-=.5;var i,r,n,o=2*Math.PI*t,a=2;return i=Math.cos(o)*(a+e*Math.cos(o/2)),r=Math.sin(o)*(a+e*Math.cos(o/2)),n=e*Math.sin(o/2),new THREE.Vector3(i,r,n)},mobius3d:function(e,t){e*=Math.PI,t*=2*Math.PI,e=2*e;var i,r,n,o=e/2,a=2.25,s=.125,l=.65;return i=s*Math.cos(t)*Math.cos(o)-l*Math.sin(t)*Math.sin(o),n=s*Math.cos(t)*Math.sin(o)+l*Math.sin(t)*Math.cos(o),r=(a+i)*Math.sin(e),i=(a+i)*Math.cos(e),new THREE.Vector3(i,r,n)}},THREE.ParametricGeometries.TubeGeometry=function(e,t,i,r,n,o){this.path=e,this.segments=t||64,this.radius=i||1,this.segmentsRadius=r||8,this.closed=n||!1,o&&(this.debug=new THREE.Object3D);var a,s,l,h,c,u,d,p=this,f=this.segments+1,m=new THREE.Vector3,g=new THREE.TubeGeometry.FrenetFrames(e,t,n),v=g.tangents,E=g.normals,y=g.binormals;this.tangents=v,this.normals=E,this.binormals=y;var T=function(t,r){return r*=2*Math.PI,d=t*(f-1),d=Math.floor(d),u=e.getPointAt(t),a=v[d],s=E[d],l=y[d],p.debug&&(p.debug.add(new THREE.ArrowHelper(a,u,i,255)),p.debug.add(new THREE.ArrowHelper(s,u,i,16711680)),p.debug.add(new THREE.ArrowHelper(l,u,i,65280))),h=-p.radius*Math.cos(r),c=p.radius*Math.sin(r),m.copy(u),m.x+=h*s.x+c*l.x,m.y+=h*s.y+c*l.y,m.z+=h*s.z+c*l.z,m.clone()};THREE.ParametricGeometry.call(this,T,t,r)},THREE.ParametricGeometries.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometries.TorusKnotGeometry=function(e,t,i,r,n,o,a){this.radius=e||200,this.tube=t||40,this.segmentsR=i||64,this.segmentsT=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1;var s=THREE.Curve.create(function(){},function(t){t*=2*Math.PI;var i=.5,r=(1+i*Math.cos(o*t))*Math.cos(n*t),s=(1+i*Math.cos(o*t))*Math.sin(n*t),l=i*Math.sin(o*t);return new THREE.Vector3(r,s*a,l).multiplyScalar(e)}),l=i,h=r,c=new s;THREE.ParametricGeometries.TubeGeometry.call(this,c,l,t,h,!0,!1)},THREE.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometries.SphereGeometry=function(e,t,i){function r(t,i){t*=Math.PI,i*=2*Math.PI;var r=e*Math.sin(t)*Math.cos(i),n=e*Math.sin(t)*Math.sin(i),o=e*Math.cos(t);return new THREE.Vector3(r,n,o)}THREE.ParametricGeometry.call(this,r,t,i,!1)},THREE.ParametricGeometries.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometries.PlaneGeometry=function(e,t,i,r){function n(i,r){var n=i*e,o=0,a=r*t;return new THREE.Vector3(n,o,a)}THREE.ParametricGeometry.call(this,n,i,r)},THREE.ParametricGeometries.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);