THREE.PLYLoader=function(){};THREE.PLYLoader.prototype={constructor:THREE.PLYLoader,load:function(e,t){var i=this;var r=new XMLHttpRequest;r.addEventListener("load",function(e){var r=i.parse(e.target.response);i.dispatchEvent({type:"load",content:r});if(t)t(r)},!1);r.addEventListener("progress",function(e){i.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1);r.addEventListener("error",function(){i.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);r.open("GET",e,!0);r.responseType="arraybuffer";r.send(null)},bin2str:function(e){var t=new Uint8Array(e);var i="";for(var r=0;r<e.byteLength;r++)i+=String.fromCharCode(t[r]);return i},isASCII:function(){return!0},parse:function(e){if(e instanceof ArrayBuffer)return this.isASCII(e)?this.parseASCII(this.bin2str(e)):this.parseBinary(e);else return this.parseASCII(e)},parseASCII:function(e){var t=new THREE.Geometry;var i;var r=/ply([\s\S]*)end_header/;var n="";if(null!=(i=r.exec(e)))n=i[1];var o=/end_header([\s\S]*)$/;var a="";if(null!=(i=o.exec(e)))a=i[1];var s=/element[\s]+vertex[\s]+(\d+)/g;var l=0;if(null!=(i=s.exec(n)))l=parseInt(i[1]);var h=/element[\s]+face[\s]+(\d+)/g;var c=0;if(null!=(i=h.exec(n)))c=parseInt(i[1]);if(0!=l&&0!=c){var u=/([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;for(var f=0;l>f;f++)if(null!=(i=u.exec(a)))t.vertices.push(new THREE.Vector3(parseFloat(i[1]),parseFloat(i[3]),parseFloat(i[5])));else{console.error("Vertex error: vertex count mismatch.");return t}var d=/3[\s]+([-+]?[0-9]+)[\s]+([-+]?[0-9]+)[\s]+([-+]?[0-9]+)/g;for(var f=0;c>f;f++)if(null!=(i=d.exec(a)))t.faces.push(new THREE.Face3(parseInt(i[1]),parseInt(i[2]),parseInt(i[3])));else{console.error("Face error: vertex count mismatch.");return t}}else console.error("Header error: vertexCount("+l+"), faceCount("+c+").");t.computeCentroids();t.computeBoundingSphere();return t},parseBinary:function(){console.error("Not supported yet.")}};THREE.EventDispatcher.prototype.apply(THREE.PLYLoader.prototype);