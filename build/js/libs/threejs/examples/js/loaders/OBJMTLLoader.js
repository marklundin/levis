THREE.OBJMTLLoader=function(){},THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(e,t,i){function r(i){if("load"===i.type)if(i.content instanceof THREE.MTLLoader.MaterialCreator)n=!0,a=i.content,a.preload();else if(200===i.target.status||0===i.target.status){var r=i.target.responseText;o=t?s.parse(r):s.parse(r,function(e){n=!1,h.load(h.baseUrl+e)})}else s.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]",response:i.target.responseText});else"error"===i.type&&(n=!0);n&&o&&(a&&o.traverse(function(e){if(e instanceof THREE.Mesh&&e.material.name){var t=a.create(e.material.name);t&&(e.material=t)}}),s.dispatchEvent({type:"load",content:o}))}var n,o,a,s=this,l=new XMLHttpRequest,h=new THREE.MTLLoader(e.substr(0,e.lastIndexOf("/")+1),i);h.addEventListener("load",r),h.addEventListener("error",r),t?(h.load(t),n=!1):n=!0,l.addEventListener("load",r,!1),l.addEventListener("progress",function(e){s.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),l.addEventListener("error",function(){s.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),l.open("GET",e,!0),l.send(null)},parse:function(e,t){function i(e,t,i){return new THREE.Vector3(e,t,i)}function r(e,t){return new THREE.Vector2(e,t)}function n(e,t,i,r){return new THREE.Face3(e,t,i,r)}function o(e,t,i,r,n){return new THREE.Face4(e,t,i,r,n)}function a(e,t){h.vertices.length>0&&(h.mergeVertices(),h.computeCentroids(),h.computeFaceNormals(),h.computeBoundingSphere(),l.add(u),h=new THREE.Geometry,u=new THREE.Mesh(h,c),p=0),void 0!==e&&(u.name=e),void 0!==t&&(c=new THREE.MeshLambertMaterial,c.name=t,u.material=c)}e=e.replace(/\ \\\r\n/g,"");for(var s=new THREE.Object3D,l=s,h=new THREE.Geometry,c=new THREE.MeshLambertMaterial,u=new THREE.Mesh(h,c),d=[],p=0,f=[],m=[],g=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,v=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,E=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,y=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,_=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,T=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,b=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,x=e.split("\n"),w=0;w<x.length;w++){var R=x[w];R=R.trim();var H;if(0!==R.length&&"#"!==R.charAt(0))if(null!==(H=g.exec(R)))d.push(i(parseFloat(H[1]),parseFloat(H[2]),parseFloat(H[3])));else if(null!==(H=v.exec(R)))f.push(i(parseFloat(H[1]),parseFloat(H[2]),parseFloat(H[3])));else if(null!==(H=E.exec(R)))m.push(r(parseFloat(H[1]),parseFloat(H[2])));else if(null!==(H=y.exec(R)))void 0===H[4]?(h.vertices.push(d[parseInt(H[1])-1],d[parseInt(H[2])-1],d[parseInt(H[3])-1]),h.faces.push(n(p++,p++,p++))):(h.vertices.push(d[parseInt(H[1])-1],d[parseInt(H[2])-1],d[parseInt(H[3])-1],d[parseInt(H[4])-1]),h.faces.push(o(p++,p++,p++,p++)));else if(null!==(H=_.exec(R)))void 0===H[10]?(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[5])-1],d[parseInt(H[8])-1]),h.faces.push(n(p++,p++,p++)),h.faceVertexUvs[0].push([m[parseInt(H[3])-1],m[parseInt(H[6])-1],m[parseInt(H[9])-1]])):(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[5])-1],d[parseInt(H[8])-1],d[parseInt(H[11])-1]),h.faces.push(o(p++,p++,p++,p++)),h.faceVertexUvs[0].push([m[parseInt(H[3])-1],m[parseInt(H[6])-1],m[parseInt(H[9])-1],m[parseInt(H[12])-1]]));else if(null!==(H=T.exec(R)))void 0===H[13]?(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[6])-1],d[parseInt(H[10])-1]),h.faces.push(n(p++,p++,p++,[f[parseInt(H[4])-1],f[parseInt(H[8])-1],f[parseInt(H[12])-1]])),h.faceVertexUvs[0].push([m[parseInt(H[3])-1],m[parseInt(H[7])-1],m[parseInt(H[11])-1]])):(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[6])-1],d[parseInt(H[10])-1],d[parseInt(H[14])-1]),h.faces.push(o(p++,p++,p++,p++,[f[parseInt(H[4])-1],f[parseInt(H[8])-1],f[parseInt(H[12])-1],f[parseInt(H[16])-1]])),h.faceVertexUvs[0].push([m[parseInt(H[3])-1],m[parseInt(H[7])-1],m[parseInt(H[11])-1],m[parseInt(H[15])-1]]));else if(null!==(H=b.exec(R)))void 0===H[10]?(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[5])-1],d[parseInt(H[8])-1]),h.faces.push(n(p++,p++,p++,[f[parseInt(H[3])-1],f[parseInt(H[6])-1],f[parseInt(H[9])-1]]))):(h.vertices.push(d[parseInt(H[2])-1],d[parseInt(H[5])-1],d[parseInt(H[8])-1],d[parseInt(H[11])-1]),h.faces.push(o(p++,p++,p++,p++,[f[parseInt(H[3])-1],f[parseInt(H[6])-1],f[parseInt(H[9])-1],f[parseInt(H[12])-1]])));else if(/^o /.test(R))l=new THREE.Object3D,l.name=R.substring(2).trim(),s.add(l);else if(/^g /.test(R))a(R.substring(2).trim(),void 0);else if(/^usemtl /.test(R))a(void 0,R.substring(7).trim());else if(/^mtllib /.test(R)){if(t){var S=R.substring(7);S=S.trim(),t(S)}}else/^s /.test(R)||console.log("THREE.OBJMTLLoader: Unhandled line "+R)}return a(void 0,void 0),s}},THREE.EventDispatcher.prototype.apply(THREE.OBJMTLLoader.prototype);