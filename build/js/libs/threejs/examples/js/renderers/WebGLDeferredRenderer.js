THREE.WebGLDeferredRenderer=function(e){function t(e){var t=e.material.uniforms;t.matProjInverse&&(t.matProjInverse.value=b.projectionMatrixInverse),t.matView&&(t.matView.value=b.matrixWorldInverse);var i=e.userData.originalLight;i&&(e.visible=i.visible,i instanceof THREE.PointLight?X(e):i instanceof THREE.SpotLight?q(e):i instanceof THREE.DirectionalLight?Z(e):i instanceof THREE.HemisphereLight?$(e):i instanceof THREE.AreaLight&&et(e))}var i=this,r=void 0!==e.width?e.width:800,n=void 0!==e.height?e.height:600,o=void 0!==e.scale?e.scale:1,a=Math.floor(o*r),s=Math.floor(o*n),l=void 0!==e.brightness?e.brightness:1,h=void 0!==e.tonemapping?e.tonemapping:THREE.SimpleOperator,c=void 0!==e.antialias?e.antialias:!1;this.renderer=e.renderer,void 0===this.renderer&&(this.renderer=new THREE.WebGLRenderer({alpha:!1,antialias:!1}),this.renderer.setSize(r,n),this.renderer.setClearColorHex(0,0),this.renderer.autoClear=!1),this.domElement=this.renderer.domElement;var u,d,p,f,m,g,v,E,y,T,_=this.renderer.context,b=null,x=new THREE.Vector3,R=new THREE.Vector3,w=new THREE.Vector3,H=new THREE.Vector3,S=new THREE.Vector3,M=new THREE.Vector3,C=new THREE.SphereGeometry(1,16,8),A=new THREE.PlaneGeometry(2,2),D=new THREE.Color(0),P=THREE.ShaderDeferred.color,L=THREE.ShaderDeferred.normalDepth,k=THREE.ShaderDeferred.emissiveLight,N=THREE.ShaderDeferred.pointLight,I=THREE.ShaderDeferred.spotLight,O=THREE.ShaderDeferred.directionalLight,F=THREE.ShaderDeferred.hemisphereLight,z=THREE.ShaderDeferred.areaLight,V=THREE.ShaderDeferred.composite,B=[],U=new THREE.ShaderMaterial;U.visible=!1;var j=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(L.uniforms),vertexShader:L.vertexShader,fragmentShader:L.fragmentShader,blending:THREE.NoBlending}),W=function(e){if(e.material instanceof THREE.MeshFaceMaterial){for(var t=[],i=[],r=e.material.materials,n=0,o=r.length;o>n;n++){var a=G(r[n]);a.transparent?(t.push(U),i.push(U)):(t.push(a.colorMaterial),i.push(a.normalDepthMaterial))}e.userData.colorMaterial=new THREE.MeshFaceMaterial(t),e.userData.normalDepthMaterial=new THREE.MeshFaceMaterial(i)}else{var a=G(e.material);e.userData.colorMaterial=a.colorMaterial,e.userData.normalDepthMaterial=a.normalDepthMaterial,e.userData.transparent=a.transparent}},G=function(e){var t={},i=THREE.UniformsUtils.clone(P.uniforms),r={USE_MAP:!!e.map,USE_ENVMAP:!!e.envMap,GAMMA_INPUT:!0},n=new THREE.ShaderMaterial({fragmentShader:P.fragmentShader,vertexShader:P.vertexShader,uniforms:i,defines:r,shading:e.shading});if(e instanceof THREE.MeshBasicMaterial)var o=D,l=e.color;else var o=e.color,l=void 0!==e.emissive?e.emissive:D;var h=void 0!==e.specular?e.specular:D,c=void 0!==e.shininess?e.shininess:1,u=void 0!==e.wrapAround?e.wrapAround?-1:1:1,d=void 0!==e.metal?e.metal?1:-1:-1;i.emissive.value.copyGammaToLinear(l),i.diffuse.value.copyGammaToLinear(o),i.specular.value.copyGammaToLinear(h),i.shininess.value=c,i.wrapAround.value=u,i.additiveSpecular.value=d,i.map.value=e.map,e.envMap&&(i.envMap.value=e.envMap,i.useRefract.value=e.envMap.mapping instanceof THREE.CubeRefractionMapping,i.refractionRatio.value=e.refractionRatio,i.combine.value=e.combine,i.reflectivity.value=e.reflectivity,i.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.samplerNormalDepth.value=compNormalDepth.renderTarget2,i.viewWidth.value=a,i.viewHeight.value=s,B.push({material:n})),n.vertexColors=e.vertexColors,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.skinning=e.skinning,n.alphaTest=e.alphaTest,n.wireframe=e.wireframe;var p;if(e.map?p=e.map:e.specularMap?p=e.specularMap:e.normalMap?p=e.normalMap:e.bumpMap&&(p=e.bumpMap),void 0!==p){var f=p.offset,m=p.repeat;i.offsetRepeat.value.set(f.x,f.y,m.x,m.y)}if(t.colorMaterial=n,e.morphTargets||e.skinning||e.bumpMap){var i=THREE.UniformsUtils.clone(L.uniforms),r={USE_BUMPMAP:!!e.bumpMap},g=new THREE.ShaderMaterial({uniforms:i,vertexShader:L.vertexShader,fragmentShader:L.fragmentShader,shading:e.shading,defines:r,blending:THREE.NoBlending});if(g.morphTargets=e.morphTargets,g.morphNormals=e.morphNormals,g.skinning=e.skinning,e.bumpMap){i.bumpMap.value=e.bumpMap,i.bumpScale.value=e.bumpScale;var f=e.bumpMap.offset,m=e.bumpMap.repeat;i.offsetRepeat.value.set(f.x,f.y,m.x,m.y)}}else var g=j.clone();return g.wireframe=e.wireframe,g.vertexColors=e.vertexColors,t.normalDepthMaterial=g,t.transparent=e.transparent,t},X=function(e){var t=e.userData.originalLight,i=e.material.uniforms,r=t.distance;r>0?(e.scale.set(1,1,1).multiplyScalar(r),i.lightRadius.value=r,x.getPositionFromMatrix(t.matrixWorld),x.applyMatrix4(b.matrixWorldInverse),i.lightPositionVS.value.copy(x),e.position.getPositionFromMatrix(t.matrixWorld)):i.lightRadius.value=1/0;var n=t.intensity*t.intensity;i.lightIntensity.value=n,i.lightColor.value.copyGammaToLinear(t.color)},Y=function(e){var t,i=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(N.uniforms),vertexShader:N.vertexShader,fragmentShader:N.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0,side:THREE.BackSide});e.distance>0?t=C:(t=A,i.depthTest=!1,i.side=THREE.FrontSide),i.uniforms.viewWidth.value=a,i.uniforms.viewHeight.value=s,i.uniforms.samplerColor.value=u.renderTarget2,i.uniforms.samplerNormalDepth.value=compNormalDepth.renderTarget2;var r=new THREE.Mesh(t,i);return r.userData.originalLight=e,B.push({material:i}),X(r),r},q=function(e){var t=e.userData.originalLight,i=e.material.uniforms,r=b.matrixWorldInverse,n=t.matrixWorld;x.getPositionFromMatrix(n),x.applyMatrix4(r),R.getPositionFromMatrix(n),w.getPositionFromMatrix(t.target.matrixWorld),R.sub(w),R.normalize(),R.transformDirection(r),i.lightPositionVS.value.copy(x),i.lightDirectionVS.value.copy(R),i.lightAngle.value=t.angle,i.lightDistance.value=t.distance;var o=t.intensity*t.intensity;i.lightIntensity.value=o,i.lightColor.value.copyGammaToLinear(t.color)},K=function(e){var t=THREE.UniformsUtils.clone(I.uniforms),i=new THREE.ShaderMaterial({uniforms:t,vertexShader:I.vertexShader,fragmentShader:I.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});t.viewWidth.value=a,t.viewHeight.value=s,t.samplerColor.value=u.renderTarget2,t.samplerNormalDepth.value=compNormalDepth.renderTarget2;var r=new THREE.Mesh(A,i);return r.userData.originalLight=e,B.push({material:i}),q(r),r},Z=function(e){var t=e.userData.originalLight,i=e.material.uniforms;R.getPositionFromMatrix(t.matrixWorld),w.getPositionFromMatrix(t.target.matrixWorld),R.sub(w),R.normalize(),R.transformDirection(b.matrixWorldInverse),i.lightDirectionVS.value.copy(R);var r=t.intensity*t.intensity;i.lightIntensity.value=r,i.lightColor.value.copyGammaToLinear(t.color)},Q=function(e){var t=THREE.UniformsUtils.clone(O.uniforms),i=new THREE.ShaderMaterial({uniforms:t,vertexShader:O.vertexShader,fragmentShader:O.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});t.viewWidth.value=a,t.viewHeight.value=s,t.samplerColor.value=u.renderTarget2,t.samplerNormalDepth.value=compNormalDepth.renderTarget2;var r=new THREE.Mesh(A,i);return r.userData.originalLight=e,B.push({material:i}),Z(r),r},$=function(e){var t=e.userData.originalLight,i=e.material.uniforms;R.getPositionFromMatrix(t.matrixWorld),R.normalize(),R.transformDirection(b.matrixWorldInverse),i.lightDirectionVS.value.copy(R);var r=t.intensity*t.intensity;i.lightIntensity.value=r,i.lightColorSky.value.copyGammaToLinear(t.color),i.lightColorGround.value.copyGammaToLinear(t.groundColor)},J=function(e){var t=THREE.UniformsUtils.clone(F.uniforms),i=new THREE.ShaderMaterial({uniforms:t,vertexShader:F.vertexShader,fragmentShader:F.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});t.viewWidth.value=a,t.viewHeight.value=s,t.samplerColor.value=u.renderTarget2,t.samplerNormalDepth.value=compNormalDepth.renderTarget2;var r=new THREE.Mesh(A,i);return r.userData.originalLight=e,B.push({material:i}),$(r),r},et=function(e){var t=e.userData.originalLight,i=e.material.uniforms,r=t.matrixWorld,n=b.matrixWorldInverse;x.getPositionFromMatrix(r),x.applyMatrix4(n),i.lightPositionVS.value.copy(x),H.copy(t.right),H.transformDirection(r),H.transformDirection(n),S.copy(t.normal),S.transformDirection(r),S.transformDirection(n),M.crossVectors(H,S),M.normalize(),i.lightRightVS.value.copy(H),i.lightNormalVS.value.copy(S),i.lightUpVS.value.copy(M),i.lightWidth.value=t.width,i.lightHeight.value=t.height,i.constantAttenuation.value=t.constantAttenuation,i.linearAttenuation.value=t.linearAttenuation,i.quadraticAttenuation.value=t.quadraticAttenuation;var o=t.intensity*t.intensity;i.lightIntensity.value=o,i.lightColor.value.copyGammaToLinear(t.color)},tt=function(e){var t=THREE.UniformsUtils.clone(z.uniforms),i=new THREE.ShaderMaterial({uniforms:t,vertexShader:z.vertexShader,fragmentShader:z.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});t.viewWidth.value=a,t.viewHeight.value=s,t.samplerColor.value=u.renderTarget2,t.samplerNormalDepth.value=compNormalDepth.renderTarget2;var r=new THREE.Mesh(A,i);return r.userData.originalLight=e,B.push({material:i}),et(r),r},it=function(){var e=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(k.uniforms),vertexShader:k.vertexShader,fragmentShader:k.fragmentShader,depthTest:!1,depthWrite:!1,blending:THREE.NoBlending});e.uniforms.viewWidth.value=a,e.uniforms.viewHeight.value=s,e.uniforms.samplerColor.value=u.renderTarget2;var t=new THREE.Mesh(A,e);return B.push({material:e}),t},rt=function(e){if(!e.userData.deferredInitialized){if(e.material&&W(e),e instanceof THREE.PointLight){var t=Y(e);e.distance>0?T.add(t):y.add(t)}else if(e instanceof THREE.SpotLight){var t=K(e);y.add(t)}else if(e instanceof THREE.DirectionalLight){var t=Q(e);y.add(t)}else if(e instanceof THREE.HemisphereLight){var t=J(e);y.add(t)}else if(e instanceof THREE.AreaLight){var t=tt(e);y.add(t)}e.userData.deferredInitialized=!0}},nt=function(e){e.material&&(e.material=e.userData.transparent?U:e.userData.colorMaterial)},ot=function(e){e.material&&(e.material=e.userData.transparent?U:e.userData.normalDepthMaterial)};this.setAntialias=function(e){c=e,c?(E.enabled=!0,v.renderToScreen=!1):(E.enabled=!1,v.renderToScreen=!0)},this.getAntialias=function(){return c},this.addEffect=function(e,t,i){e.material&&e.uniforms&&(t&&(e.uniforms[t].value=compNormalDepth.renderTarget2),i&&(e.uniforms[i].value=u.renderTarget2),(t||i)&&B.push({material:e.material,normalDepth:t,color:i})),p.insertPass(e,-1)},this.setScale=function(e){o=e,a=Math.floor(o*r),s=Math.floor(o*n),compNormalDepth.setSize(a,s),u.setSize(a,s),d.setSize(a,s),p.setSize(a,s),u.renderTarget2.shareDepthFrom=compNormalDepth.renderTarget2,d.renderTarget2.shareDepthFrom=compNormalDepth.renderTarget2;for(var t=0,i=B.length;i>t;t++){var l=B[t],h=l.material,c=h.uniforms,f=void 0!==l.color?l.color:"samplerColor",m=void 0!==l.normalDepth?l.normalDepth:"samplerNormalDepth";c[f]&&(c[f].value=u.renderTarget2),c[m]&&(c[m].value=compNormalDepth.renderTarget2),c.viewWidth&&(c.viewWidth.value=a),c.viewHeight&&(c.viewHeight.value=s)}v.uniforms.samplerLight.value=d.renderTarget2,E.uniforms.resolution.value.set(1/r,1/n)},this.setSize=function(e,t){r=e,n=t,this.renderer.setSize(r,n),this.setScale(o)},this.render=function(e,i){if(!e.userData.lightSceneProxy){e.userData.lightSceneProxy=new THREE.Scene,e.userData.lightSceneFullscreen=new THREE.Scene;var r=it();e.userData.lightSceneFullscreen.add(r)}b=i,T=e.userData.lightSceneProxy,y=e.userData.lightSceneFullscreen,f.camera=b,passNormalDepth.camera=b,g.camera=b,m.camera=THREE.EffectComposer.camera,f.scene=e,passNormalDepth.scene=e,m.scene=y,g.scene=T,e.traverse(rt),e.autoUpdate=!1,e.updateMatrixWorld(),e.traverse(ot),this.renderer.autoClearDepth=!0,this.renderer.autoClearStencil=!0,_.stencilOp(_.REPLACE,_.REPLACE,_.REPLACE),_.stencilFunc(_.ALWAYS,1,4294967295),_.clearStencil(0),compNormalDepth.render(),_.stencilFunc(_.EQUAL,1,4294967295),_.stencilOp(_.KEEP,_.KEEP,_.KEEP),e.traverse(nt),this.renderer.autoClearDepth=!0,this.renderer.autoClearStencil=!1,u.render(),this.renderer.autoClearDepth=!1,e.autoUpdate=!0,_.depthFunc(_.GEQUAL),b.projectionMatrixInverse.getInverse(b.projectionMatrix);for(var n=0,o=T.children.length;o>n;n++){var a=T.children[n];t(a)}for(var n=0,o=y.children.length;o>n;n++){var a=y.children[n];t(a)}d.render(),this.renderer.autoClearDepth=!0,this.renderer.autoClearStencil=!0,_.depthFunc(_.LEQUAL),_.disable(_.STENCIL_TEST),p.render(.1)};var at=function(){var e={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!0,format:THREE.RGBAFormat,type:THREE.FloatType},t={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!0,format:THREE.RGBAFormat,type:THREE.FloatType},o={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBFormat,type:THREE.UnsignedByteType},y=new THREE.WebGLRenderTarget(a,s,t),T=new THREE.WebGLRenderTarget(a,s,t),_=new THREE.WebGLRenderTarget(a,s,e),b=new THREE.WebGLRenderTarget(a,s,o);y.generateMipmaps=!1,T.generateMipmaps=!1,_.generateMipmaps=!1,b.generateMipmaps=!1,passNormalDepth=new THREE.RenderPass,passNormalDepth.clear=!0,compNormalDepth=new THREE.EffectComposer(i.renderer,T),compNormalDepth.addPass(passNormalDepth),f=new THREE.RenderPass,f.clear=!0,u=new THREE.EffectComposer(i.renderer,y),u.addPass(f),u.renderTarget2.shareDepthFrom=compNormalDepth.renderTarget2,m=new THREE.RenderPass,m.clear=!0,g=new THREE.RenderPass,g.clear=!1,d=new THREE.EffectComposer(i.renderer,_),d.addPass(m),d.addPass(g),d.renderTarget2.shareDepthFrom=compNormalDepth.renderTarget2,v=new THREE.ShaderPass(V),v.uniforms.samplerLight.value=d.renderTarget2,v.uniforms.brightness.value=l,v.material.blending=THREE.NoBlending,v.clear=!0;var x;switch(h){case THREE.SimpleOperator:x={TONEMAP_SIMPLE:!0};break;case THREE.LinearOperator:x={TONEMAP_LINEAR:!0};break;case THREE.ReinhardOperator:x={TONEMAP_REINHARD:!0};break;case THREE.FilmicOperator:x={TONEMAP_FILMIC:!0};break;case THREE.UnchartedOperator:x={TONEMAP_UNCHARTED:!0}}v.material.defines=x,E=new THREE.ShaderPass(THREE.FXAAShader),E.uniforms.resolution.value.set(1/r,1/n),E.renderToScreen=!0,p=new THREE.EffectComposer(i.renderer,b),p.addPass(v),p.addPass(E),c?(E.enabled=!0,v.renderToScreen=!1):(E.enabled=!1,v.renderToScreen=!0)};at()},THREE.NoOperator=0,THREE.SimpleOperator=1,THREE.LinearOperator=2,THREE.ReinhardOperator=3,THREE.FilmicOperator=4,THREE.UnchartedOperator=5;