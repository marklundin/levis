THREE.WebGLRenderer.LineRenderer=function(e,t){THREE.WebGLRenderer.Object3DRenderer.call(this,e,t)},THREE.WebGLRenderer.LineRenderer.prototype=Object.create(THREE.WebGLRenderer.Object3DRenderer.prototype),THREE.extend(THREE.WebGLRenderer.LineRenderer.prototype,{createBuffers:function(e){var t=this.renderer;e.__webglVertexBuffer=t.createBuffer(),e.__webglColorBuffer=t.createBuffer(),e.__webglLineDistanceBuffer=t.createBuffer(),this.info.memory.geometries++},initBuffers:function(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__lineDistanceArray=new Float32Array(1*i),e.__webglLineCount=i,this.initCustomAttributes(e,t)},setBuffers:function(e){var t,i,r,n,o,a,s,l,c,h,u,d,p=this.renderer,f=e.vertices,m=e.colors,g=e.lineDistances,v=f.length,E=m.length,y=g.length,T=e.__vertexArray,_=e.__colorArray,b=e.__lineDistanceArray,x=e.verticesNeedUpdate,R=e.colorsNeedUpdate,w=e.lineDistancesNeedUpdate,H=e.__webglCustomAttributesList;if(x){for(t=0;v>t;t++)n=f[t],o=3*t,T[o]=n.x,T[o+1]=n.y,T[o+2]=n.z;p.setDynamicArrayBuffer(e.__webglVertexBuffer,T)}if(R){for(i=0;E>i;i++)a=m[i],o=3*i,_[o]=a.r,_[o+1]=a.g,_[o+2]=a.b;p.setDynamicArrayBuffer(e.__webglColorBuffer,_)}if(w){for(r=0;y>r;r++)b[r]=g[r];p.setDynamicArrayBuffer(e.__webglLineDistanceBuffer,b)}if(H)for(s=0,l=H.length;l>s;s++)if(d=H[s],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(o=0,h=d.value.length,1===d.size)for(c=0;h>c;c++)d.array[c]=d.value[c];else if(2===d.size)for(c=0;h>c;c++)u=d.value[c],d.array[o]=u.x,d.array[o+1]=u.y,o+=2;else if(3===d.size)if("c"===d.type)for(c=0;h>c;c++)u=d.value[c],d.array[o]=u.r,d.array[o+1]=u.g,d.array[o+2]=u.b,o+=3;else for(c=0;h>c;c++)u=d.value[c],d.array[o]=u.x,d.array[o+1]=u.y,d.array[o+2]=u.z,o+=3;else if(4===d.size)for(c=0;h>c;c++)u=d.value[c],d.array[o]=u.x,d.array[o+1]=u.y,d.array[o+2]=u.z,d.array[o+3]=u.w,o+=4;p.setDynamicArrayBuffer(d.buffer,d.array)}}});