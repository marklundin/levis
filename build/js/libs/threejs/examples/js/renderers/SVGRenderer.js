THREE.SVGRenderer=function(){function e(e){D.setRGB(0,0,0),P.setRGB(0,0,0),L.setRGB(0,0,0);for(var t=0,i=e.length;i>t;t++){var r=e[t],n=r.color;r instanceof THREE.AmbientLight?(D.r+=n.r,D.g+=n.g,D.b+=n.b):r instanceof THREE.DirectionalLight?(P.r+=n.r,P.g+=n.g,P.b+=n.b):r instanceof THREE.PointLight&&(L.r+=n.r,L.g+=n.g,L.b+=n.b)}}function t(e,t,i,r){for(var n=0,o=e.length;o>n;n++){var a=e[n],s=a.color;if(a instanceof THREE.DirectionalLight){var l=k.getPositionFromMatrix(a.matrixWorld).normalize(),h=i.dot(l);if(0>=h)continue;h*=a.intensity,r.r+=s.r*h,r.g+=s.g*h,r.b+=s.b*h}else if(a instanceof THREE.PointLight){var l=k.getPositionFromMatrix(a.matrixWorld),h=i.dot(k.subVectors(l,t).normalize());if(0>=h)continue;if(h*=0==a.distance?1:1-Math.min(t.distanceTo(l)/a.distance,1),0==h)continue;h*=a.intensity,r.r+=s.r*h,r.g+=s.g*h,r.b+=s.b*h}}}function i(){}function r(e,t,i,r){T=a(x++),T.setAttribute("x1",e.positionScreen.x),T.setAttribute("y1",e.positionScreen.y),T.setAttribute("x2",t.positionScreen.x),T.setAttribute("y2",t.positionScreen.y),r instanceof THREE.LineBasicMaterial&&(T.setAttribute("style","fill: none; stroke: "+r.color.getStyle()+"; stroke-width: "+r.linewidth+"; stroke-opacity: "+r.opacity+"; stroke-linecap: "+r.linecap+"; stroke-linejoin: "+r.linejoin),H.appendChild(T))}function n(e,i,r,n,o){if(R.info.render.vertices+=3,R.info.render.faces++,T=s(_++),T.setAttribute("d","M "+e.positionScreen.x+" "+e.positionScreen.y+" L "+i.positionScreen.x+" "+i.positionScreen.y+" L "+r.positionScreen.x+","+r.positionScreen.y+"z"),o instanceof THREE.MeshBasicMaterial)C.copy(o.color),o.vertexColors===THREE.FaceColors&&C.multiply(n.color);else if(o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)A.copy(o.color),o.vertexColors===THREE.FaceColors&&A.multiply(n.color),C.copy(D),t(c,n.centroidModel,n.normalModel,C),C.multiply(A).add(o.emissive);else if(o instanceof THREE.MeshDepthMaterial)y=1-o.__2near/(o.__farPlusNear-n.z*o.__farMinusNear),C.setRGB(y,y,y);else if(o instanceof THREE.MeshNormalMaterial){var a=n.normalModelView;C.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5)}o.wireframe?T.setAttribute("style","fill: none; stroke: "+C.getStyle()+"; stroke-width: "+o.wireframeLinewidth+"; stroke-opacity: "+o.opacity+"; stroke-linecap: "+o.wireframeLinecap+"; stroke-linejoin: "+o.wireframeLinejoin):T.setAttribute("style","fill: "+C.getStyle()+"; fill-opacity: "+o.opacity),H.appendChild(T)}function o(e,i,r,n,o,a){if(R.info.render.vertices+=4,R.info.render.faces++,T=s(_++),T.setAttribute("d","M "+e.positionScreen.x+" "+e.positionScreen.y+" L "+i.positionScreen.x+" "+i.positionScreen.y+" L "+r.positionScreen.x+","+r.positionScreen.y+" L "+n.positionScreen.x+","+n.positionScreen.y+"z"),a instanceof THREE.MeshBasicMaterial)C.copy(a.color),a.vertexColors===THREE.FaceColors&&C.multiply(o.color);else if(a instanceof THREE.MeshLambertMaterial||a instanceof THREE.MeshPhongMaterial)A.copy(a.color),a.vertexColors===THREE.FaceColors&&A.multiply(o.color),C.copy(D),t(c,o.centroidModel,o.normalModel,C),C.multiply(A).add(a.emissive);else if(a instanceof THREE.MeshDepthMaterial)y=1-a.__2near/(a.__farPlusNear-o.z*a.__farMinusNear),C.setRGB(y,y,y);else if(a instanceof THREE.MeshNormalMaterial){var l=o.normalModelView;C.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5)}a.wireframe?T.setAttribute("style","fill: none; stroke: "+C.getStyle()+"; stroke-width: "+a.wireframeLinewidth+"; stroke-opacity: "+a.opacity+"; stroke-linecap: "+a.wireframeLinecap+"; stroke-linejoin: "+a.wireframeLinejoin):T.setAttribute("style","fill: "+C.getStyle()+"; fill-opacity: "+a.opacity),H.appendChild(T)}function a(e){return null==I[e]?(I[e]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==O&&I[e].setAttribute("shape-rendering","crispEdges"),I[e]):I[e]}function s(e){return null==N[e]?(N[e]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==O&&N[e].setAttribute("shape-rendering","crispEdges"),N[e]):N[e]}console.log("THREE.SVGRenderer",THREE.REVISION);var l,h,c,u,d,p,f,m,g,v,E,y,T,_,b,x,R=this,w=new THREE.Projector,H=document.createElementNS("http://www.w3.org/2000/svg","svg"),S=new THREE.Box2,M=new THREE.Box2,C=new THREE.Color,A=new THREE.Color,D=new THREE.Color,P=new THREE.Color,L=new THREE.Color,k=new THREE.Vector3,N=[],I=[],O=1;this.domElement=H,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.setQuality=function(e){switch(e){case"high":O=1;break;case"low":O=0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setClearColor=function(){},this.setSize=function(e,t){u=e,d=t,p=u/2,f=d/2,H.setAttribute("viewBox",-p+" "+-f+" "+u+" "+d),H.setAttribute("width",u),H.setAttribute("height",d),S.min.set(-p,-f),S.max.set(p,f)},this.clear=function(){for(_=0,b=0,x=0;H.childNodes.length>0;)H.removeChild(H.childNodes[0])},this.render=function(t,a){if(a instanceof THREE.Camera==!1)return console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera."),void 0;this.autoClear===!0&&this.clear(),R.info.render.vertices=0,R.info.render.faces=0,l=w.projectScene(t,a,this.sortObjects,this.sortElements),h=l.elements,c=l.lights,e(c);for(var s=0,u=h.length;u>s;s++){var d=h[s],y=d.material;if(void 0!==y&&y.visible!==!1)if(M.makeEmpty(),d instanceof THREE.RenderableParticle)m=d,m.x*=p,m.y*=-f,i(m,d,y);else if(d instanceof THREE.RenderableLine)m=d.v1,g=d.v2,m.positionScreen.x*=p,m.positionScreen.y*=-f,g.positionScreen.x*=p,g.positionScreen.y*=-f,M.setFromPoints([m.positionScreen,g.positionScreen]),S.isIntersectionBox(M)===!0&&r(m,g,d,y);else if(d instanceof THREE.RenderableFace3){if(m=d.v1,g=d.v2,v=d.v3,m.positionScreen.z<-1||m.positionScreen.z>1)continue;if(g.positionScreen.z<-1||g.positionScreen.z>1)continue;if(v.positionScreen.z<-1||v.positionScreen.z>1)continue;m.positionScreen.x*=p,m.positionScreen.y*=-f,g.positionScreen.x*=p,g.positionScreen.y*=-f,v.positionScreen.x*=p,v.positionScreen.y*=-f,M.setFromPoints([m.positionScreen,g.positionScreen,v.positionScreen]),S.isIntersectionBox(M)===!0&&n(m,g,v,d,y)}else if(d instanceof THREE.RenderableFace4){if(m=d.v1,g=d.v2,v=d.v3,E=d.v4,m.positionScreen.z<-1||m.positionScreen.z>1)continue;if(g.positionScreen.z<-1||g.positionScreen.z>1)continue;if(v.positionScreen.z<-1||v.positionScreen.z>1)continue;if(E.positionScreen.z<-1||E.positionScreen.z>1)continue;m.positionScreen.x*=p,m.positionScreen.y*=-f,g.positionScreen.x*=p,g.positionScreen.y*=-f,v.positionScreen.x*=p,v.positionScreen.y*=-f,E.positionScreen.x*=p,E.positionScreen.y*=-f,M.setFromPoints([m.positionScreen,g.positionScreen,v.positionScreen,E.positionScreen]),S.isIntersectionBox(M)===!0&&o(m,g,v,E,d,y)}}}};