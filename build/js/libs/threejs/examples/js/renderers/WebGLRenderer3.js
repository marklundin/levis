THREE.WebGLRenderer3=function(e){console.log("THREE.WebGLRenderer3",THREE.REVISION);e=e||{};var t=this;var i=void 0!==e.canvas?e.canvas:document.createElement("canvas");var r=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;var n;try{var a=e.contextAttributes||{};n=i.getContext("webgl",a)||i.getContext("experimental-webgl",a)}catch(o){console.error(o)}var s="highp";var l={};if(null!==n){l.element_index_uint=n.getExtension("OES_element_index_uint");l.texture_float=n.getExtension("OES_texture_float");l.texture_float_linear=n.getExtension("OES_texture_float_linear");l.standard_derivatives=n.getExtension("OES_standard_derivatives");l.texture_filter_anisotropic=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");l.compressed_texture_s3tc=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.enable(n.CULL_FACE);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.BLEND);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.clearColor(0,0,0,0)}var c=new THREE.Color(0);var h=0;var u=new THREE.Vector3;var f=new THREE.Frustum;var d=new THREE.Matrix3;var p=new THREE.Matrix4;var m=new THREE.Matrix4;var v={};var g=function(e,i){var r=e.id.toString()+"+"+i.id.toString();if(void 0!==v[r])return v[r];var a=e.vertices;var o=e.faces;var s=[];var l=function(e){s.push(e.x,e.y,e.z)};var c=[];var h=function(e){c.push(e.x,e.y,e.z)};for(var u=0,f=o.length;f>u;u++){var d=o[u];var p=d.vertexNormals.length>0;l(a[d.a]);l(a[d.b]);l(a[d.c]);if(p===!0){h(d.vertexNormals[0]);h(d.vertexNormals[1]);h(d.vertexNormals[2])}else{h(d.normal);h(d.normal);h(d.normal)}if(d instanceof THREE.Face4){l(a[d.a]);l(a[d.c]);l(a[d.d]);if(p===!0){h(d.vertexNormals[0]);h(d.vertexNormals[2]);h(d.vertexNormals[3])}else{h(d.normal);h(d.normal);h(d.normal)}}}var m={positions:n.createBuffer(),normals:n.createBuffer(),count:s.length/3};n.bindBuffer(n.ARRAY_BUFFER,m.positions);n.bufferData(n.ARRAY_BUFFER,new Float32Array(s),n.STATIC_DRAW);n.bindBuffer(n.ARRAY_BUFFER,m.normals);n.bufferData(n.ARRAY_BUFFER,new Float32Array(c),n.STATIC_DRAW);v[r]=m;t.info.memory.geometries++;return m};var E={};var y={};var T=function(e){if(void 0!==E[e.id])return E[e.id];var i=["precision "+s+" float;","attribute vec3 position;","attribute vec3 normal;","uniform mat4 modelViewMatrix;","uniform mat3 normalMatrix;","uniform mat4 projectionMatrix;",""].join("\n");var r=["precision "+s+" float;",""].join("\n");if(e instanceof THREE.ShaderMaterial){i+=e.vertexShader;r+=e.fragmentShader}else if(e instanceof THREE.MeshNormalMaterial){i+=["varying vec3 vNormal;","void main() {","	vNormal = normalize( normalMatrix * normal );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n");r+=["varying vec3 vNormal;","uniform float opacity;","void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")}else{i+=["void main() {","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n");r+=["void main() {","	gl_FragColor = vec4( 1.0, 0, 0, 1.0 );","}"].join("\n")}var a;var o=i+r;if(void 0!==y[o]){a=y[o];E[e.id]=a}else{a=n.createProgram();n.attachShader(a,_(n.VERTEX_SHADER,i));n.attachShader(a,_(n.FRAGMENT_SHADER,r));n.linkProgram(a);if(n.getProgramParameter(a,n.LINK_STATUS)===!0){y[o]=a;E[e.id]=a;t.info.memory.programs++}else{console.error("VALIDATE_STATUS: "+n.getProgramParameter(a,n.VALIDATE_STATUS));console.error("GL_ERROR: "+n.getError());a=T(new THREE.MeshBasicMaterial);E[e.id]=a}}return a};var _=function(e,t){var i=n.createShader(e);n.shaderSource(i,t);n.compileShader(i);if(n.getShaderParameter(i,n.COMPILE_STATUS)===!0);else{console.error(n.getShaderInfoLog(i),t);return null}return i};this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};this.domElement=i;this.extensions=l;this.autoClear=!0;this.setClearColor=function(e,t){c.set(e);h=void 0!==t?t:1;n.clearColor(c.r,c.g,c.b,h)};this.setSize=function(e,t,a){i.width=e*r;i.height=t*r;if(1!==r&&a!==!1){i.style.width=e+"px";i.style.height=t+"px"}n.viewport(0,0,i.width,i.height)};this.clear=function(e,t,i){var r=0;if(void 0===e||e)r|=n.COLOR_BUFFER_BIT;if(void 0===t||t)r|=n.DEPTH_BUFFER_BIT;if(void 0===i||i)r|=n.STENCIL_BUFFER_BIT;n.clear(r)};var b=null;var x=function(e){if(e!==b){if(e===THREE.NoBlending)n.disable(n.BLEND);else n.enable(n.BLEND);b=e}};var R=[];var w=[];var H=function(e,t){if(e.visible!==!1){if(e instanceof THREE.Mesh&&f.intersectsObject(e)===!0){if(null!==e.renderDepth)e.z=e.renderDepth;else{u.getPositionFromMatrix(e.matrixWorld);u.applyProjection(m);e.z=u.z}if(e.material.transparent===!0)w.push(e);else R.push(e)}for(var i=0,r=e.children.length;r>i;i++)H(e.children[i],t)}};var S=function(e,t){return e.z-t.z};var M=function(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id};var C,A,D;var L={};var P=function(e,i){var r=g(e.geometry,e.material);var a=e.material;if(a!==A){var o=T(e.material);if(o!==D){n.useProgram(o);L.modelViewMatrix=n.getUniformLocation(o,"modelViewMatrix");L.normalMatrix=n.getUniformLocation(o,"normalMatrix");L.projectionMatrix=n.getUniformLocation(o,"projectionMatrix");L.position=n.getAttribLocation(o,"position");L.normal=n.getAttribLocation(o,"normal");n.uniformMatrix4fv(L.projectionMatrix,!1,i.projectionMatrix.elements);D=o}if(a instanceof THREE.MeshNormalMaterial)n.uniform1f(n.getUniformLocation(o,"opacity"),a.opacity);else if(a instanceof THREE.ShaderMaterial){var s=a.uniforms;for(var l in s){var c=n.getUniformLocation(o,l);var h=s[l].type;var u=s[l].value;if("i"===h)n.uniform1i(c,u);else if("f"===h)n.uniform1f(c,u);else if("v2"===h)n.uniform2f(c,u.x,u.y);else if("v3"===h)n.uniform3f(c,u.x,u.y,u.z);else if("v4"===h)n.uniform4f(c,u.x,u.y,u.z,u.w);else if("c"===h)n.uniform3f(c,u.r,u.g,u.b)}}A=a}if(r!==C){n.bindBuffer(n.ARRAY_BUFFER,r.positions);n.enableVertexAttribArray(L.position);n.vertexAttribPointer(L.position,3,n.FLOAT,!1,0,0);if(L.normal>=0){n.bindBuffer(n.ARRAY_BUFFER,r.normals);n.enableVertexAttribArray(L.normal);n.vertexAttribPointer(L.normal,3,n.FLOAT,!1,0,0)}C=r}p.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld);d.getNormalMatrix(p);n.uniformMatrix4fv(L.modelViewMatrix,!1,p.elements);n.uniformMatrix3fv(L.normalMatrix,!1,d.elements);n.drawArrays(n.TRIANGLES,0,r.count);t.info.render.calls++};this.render=function(e,i){if(this.autoClear===!0)this.clear();e.updateMatrixWorld();if(void 0===i.parent)i.updateMatrixWorld();i.matrixWorldInverse.getInverse(i.matrixWorld);m.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse);f.setFromMatrix(m);R.length=0;w.length=0;t.info.render.calls=0;C=void 0;A=void 0;D=void 0;H(e,i);if(R.length>0){R.sort(S);x(THREE.NoBlending);for(var r=0,n=R.length;n>r;r++)P(R[r],i)}if(w.length>0){w.sort(M);x(THREE.NormalBlending);for(var r=0,n=w.length;n>r;r++)P(w[r],i)}}};