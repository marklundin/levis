THREE.NURBSUtils={findSpan:function(e,t,i){var r=i.length-e-1;if(t>=i[r])return r-1;if(t<=i[e])return e;for(var n=e,o=r,a=Math.floor((n+o)/2);t<i[a]||t>=i[a+1];)t<i[a]?o=a:n=a,a=Math.floor((n+o)/2);return a},calcBasisFunctions:function(e,t,i,r){var n=[],o=[],a=[];n[0]=1;for(var s=1;i>=s;++s){o[s]=t-r[e+1-s],a[s]=r[e+s]-t;for(var l=0,h=0;s>h;++h){var c=a[h+1],u=o[s-h],d=n[h]/(c+u);n[h]=l+c*d,l=u*d}n[s]=l}return n},calcBSplinePoint:function(e,t,i,r){for(var n=this.findSpan(e,r,t),o=this.calcBasisFunctions(n,r,e,t),a=new THREE.Vector4(0,0,0,0),s=0;e>=s;++s){var l=i[n-e+s],h=o[s],c=l.w*h;a.x+=l.x*c,a.y+=l.y*c,a.z+=l.z*c,a.w+=l.w*h}return a},calcBasisFunctionDerivatives:function(e,t,i,r,n){for(var o=[],a=0;i>=a;++a)o[a]=0;for(var s=[],a=0;r>=a;++a)s[a]=o.slice(0);for(var l=[],a=0;i>=a;++a)l[a]=o.slice(0);l[0][0]=1;for(var h=o.slice(0),c=o.slice(0),u=1;i>=u;++u){h[u]=t-n[e+1-u],c[u]=n[e+u]-t;for(var d=0,p=0;u>p;++p){var f=c[p+1],m=h[u-p];l[u][p]=f+m;var g=l[p][u-1]/l[u][p];l[p][u]=d+f*g,d=m*g}l[u][u]=d}for(var u=0;i>=u;++u)s[0][u]=l[u][i];for(var p=0;i>=p;++p){for(var v=0,E=1,y=[],a=0;i>=a;++a)y[a]=o.slice(0);y[0][0]=1;for(var T=1;r>=T;++T){var _=0,b=p-T,x=i-T;p>=T&&(y[E][0]=y[v][0]/l[x+1][b],_=y[E][0]*l[b][x]);for(var R=b>=-1?1:-b,w=x>=p-1?T-1:i-p,u=R;w>=u;++u)y[E][u]=(y[v][u]-y[v][u-1])/l[x+1][b+u],_+=y[E][u]*l[b+u][x];x>=p&&(y[E][T]=-y[v][T-1]/l[x+1][p],_+=y[E][T]*l[p][x]),s[T][p]=_;var u=v;v=E,E=u}}for(var p=i,T=1;r>=T;++T){for(var u=0;i>=u;++u)s[T][u]*=p;p*=i-T}return s},calcBSplineDerivatives:function(e,t,i,r,n){for(var o=e>n?n:e,a=[],s=this.findSpan(e,r,t),l=this.calcBasisFunctionDerivatives(s,r,e,o,t),h=[],c=0;c<i.length;++c){var u=i[c].clone(),d=u.w;u.x*=d,u.y*=d,u.z*=d,h[c]=u}for(var p=0;o>=p;++p){for(var u=h[s-e].clone().multiplyScalar(l[p][0]),f=1;e>=f;++f)u.add(h[s-e+f].clone().multiplyScalar(l[p][f]));a[p]=u}for(var p=o+1;n+1>=p;++p)a[p]=new THREE.Vector4(0,0,0);return a},calcKoverI:function(e,t){for(var i=1,r=2;e>=r;++r)i*=r;for(var n=1,r=2;t>=r;++r)n*=r;for(var r=2;e-t>=r;++r)n*=r;return i/n},calcRationalCurveDerivatives:function(e){for(var t=e.length,i=[],r=[],n=0;t>n;++n){var o=e[n];i[n]=new THREE.Vector3(o.x,o.y,o.z),r[n]=o.w}for(var a=[],s=0;t>s;++s){for(var l=i[s].clone(),n=1;s>=n;++n)l.sub(a[s-n].clone().multiplyScalar(this.calcKoverI(s,n)*r[n]));a[s]=l.divideScalar(r[0])}return a},calcNURBSDerivatives:function(e,t,i,r,n){var o=this.calcBSplineDerivatives(e,t,i,r,n);return this.calcRationalCurveDerivatives(o)},calcSurfacePoint:function(e,t,i,r,n,o,a){for(var s=this.findSpan(e,o,i),l=this.findSpan(t,a,r),h=this.calcBasisFunctions(s,o,e,i),c=this.calcBasisFunctions(l,a,t,r),u=[],d=0;t>=d;++d){u[d]=new THREE.Vector4(0,0,0,0);for(var p=0;e>=p;++p){var f=n[s-e+p][l-t+d].clone(),m=f.w;f.x*=m,f.y*=m,f.z*=m,u[d].add(f.multiplyScalar(h[p]))}}for(var g=new THREE.Vector4(0,0,0,0),d=0;t>=d;++d)g.add(u[d].multiplyScalar(c[d]));return g.divideScalar(g.w),new THREE.Vector3(g.x,g.y,g.z)}};