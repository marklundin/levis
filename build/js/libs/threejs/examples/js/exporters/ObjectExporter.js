THREE.ObjectExporter=function(){},THREE.ObjectExporter.prototype={constructor:THREE.ObjectExporter,parse:function(e){var t={metadata:{version:4.3,type:"object",generator:"ObjectExporter"}},i={},r=new THREE.GeometryExporter,n=function(e){if(void 0===t.geometries&&(t.geometries=[]),void 0===i[e.uuid]){var n={};n.uuid=e.uuid,""!==e.name&&(n.name=e.name),e instanceof THREE.PlaneGeometry?(n.type="PlaneGeometry",n.width=e.width,n.height=e.height,n.widthSegments=e.widthSegments,n.heightSegments=e.heightSegments):e instanceof THREE.CubeGeometry?(n.type="CubeGeometry",n.width=e.width,n.height=e.height,n.depth=e.depth,n.widthSegments=e.widthSegments,n.heightSegments=e.heightSegments,n.depthSegments=e.depthSegments):e instanceof THREE.CylinderGeometry?(n.type="CylinderGeometry",n.radiusTop=e.radiusTop,n.radiusBottom=e.radiusBottom,n.height=e.height,n.radiusSegments=e.radiusSegments,n.heightSegments=e.heightSegments,n.openEnded=n.openEnded):e instanceof THREE.SphereGeometry?(n.type="SphereGeometry",n.radius=e.radius,n.widthSegments=e.widthSegments,n.heightSegments=e.heightSegments,n.phiStart=e.phiStart,n.phiLength=e.phiLength,n.thetaStart=e.thetaStart,n.thetaLength=e.thetaLength):e instanceof THREE.IcosahedronGeometry?(n.type="IcosahedronGeometry",n.radius=e.radius,n.detail=e.detail):e instanceof THREE.TorusGeometry?(n.type="TorusGeometry",n.radius=e.radius,n.tube=e.tube,n.radialSegments=e.radialSegments,n.tubularSegments=e.tubularSegments,n.arc=e.arc):e instanceof THREE.TorusKnotGeometry?(n.type="TorusKnotGeometry",n.radius=e.radius,n.tube=e.tube,n.radialSegments=e.radialSegments,n.tubularSegments=e.tubularSegments,n.p=e.p,n.q=e.q,n.heightScale=e.heightScale):e instanceof THREE.Geometry&&(n.type="Geometry",n.data=r.parse(e),delete n.data.metadata),i[e.uuid]=n,t.geometries.push(n)}return e.uuid},o={},a=new THREE.MaterialExporter,s=function(e){if(void 0===t.materials&&(t.materials=[]),void 0===o[e.uuid]){var i=a.parse(e);delete i.metadata,o[e.uuid]=i,t.materials.push(i)}return e.uuid},l=function(e){var t={};if(t.uuid=e.uuid,""!==e.name&&(t.name=e.name),"{}"!==JSON.stringify(e.userData)&&(t.userData=e.userData),e.visible!==!0&&(t.visible=e.visible),e instanceof THREE.Scene?t.type="Scene":e instanceof THREE.PerspectiveCamera?(t.type="PerspectiveCamera",t.fov=e.fov,t.aspect=e.aspect,t.near=e.near,t.far=e.far):e instanceof THREE.OrthographicCamera?(t.type="OrthographicCamera",t.left=e.left,t.right=e.right,t.top=e.top,t.bottom=e.bottom,t.near=e.near,t.far=e.far):e instanceof THREE.AmbientLight?(t.type="AmbientLight",t.color=e.color.getHex()):e instanceof THREE.DirectionalLight?(t.type="DirectionalLight",t.color=e.color.getHex(),t.intensity=e.intensity):e instanceof THREE.PointLight?(t.type="PointLight",t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance):e instanceof THREE.SpotLight?(t.type="SpotLight",t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance,t.angle=e.angle,t.exponent=e.exponent):e instanceof THREE.HemisphereLight?(t.type="HemisphereLight",t.color=e.color.getHex(),t.groundColor=e.groundColor.getHex()):e instanceof THREE.Mesh?(t.type="Mesh",t.geometry=n(e.geometry),t.material=s(e.material)):t.type="Object3D",t.matrix=e.matrix.toArray(),e.children.length>0){t.children=[];for(var i=0;i<e.children.length;i++)t.children.push(l(e.children[i]))}return t};return t.object=l(e),t}};