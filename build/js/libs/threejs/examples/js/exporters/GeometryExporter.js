THREE.GeometryExporter=function(){},THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(e){function t(e,t,i){return i?e|1<<t:e&~(1<<t)}function i(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==u[t]?u[t]:(u[t]=c.length/3,c.push(e.x,e.y,e.z),u[t])}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==p[t]?p[t]:(p[t]=d.length,d.push(e.getHex()),p[t])}function o(e){var t=e.x.toString()+e.y.toString();return void 0!==m[t]?m[t]:(m[t]=f.length/2,f.push(e.x,e.y),m[t])}for(var n={metadata:{version:4,type:"geometry",generator:"GeometryExporter"}},a=[],s=0;s<e.vertices.length;s++){var l=e.vertices[s];a.push(l.x,l.y,l.z)}for(var h=[],c=[],u={},d=[],p={},f=[],m={},s=0;s<e.faces.length;s++){var g=e.faces[s],v=g instanceof THREE.Face3,E=!1,y=!1,T=e.faceVertexUvs[0].length>0,_=g.normal.length()>0,x=g.vertexNormals.length>0,b=1!==g.color.r||1!==g.color.g||1!==g.color.b,R=g.vertexColors.length>0,w=0;if(w=t(w,0,!v),w=t(w,1,E),w=t(w,2,y),w=t(w,3,T),w=t(w,4,_),w=t(w,5,x),w=t(w,6,b),w=t(w,7,R),h.push(w),v?h.push(g.a,g.b,g.c):h.push(g.a,g.b,g.c,g.d),T){var H=e.faceVertexUvs[0][s];v?h.push(o(H[0]),o(H[1]),o(H[2])):h.push(o(H[0]),o(H[1]),o(H[2]),o(H[3]))}if(_&&h.push(i(g.normal)),x){var S=g.vertexNormals;v?h.push(i(S[0]),i(S[1]),i(S[2])):h.push(i(S[0]),i(S[1]),i(S[2]),i(S[3]))}if(b&&h.push(r(g.color)),R){var M=g.vertexColors;v?h.push(r(M[0]),r(M[1]),r(M[2])):h.push(r(M[0]),r(M[1]),r(M[2]),r(M[3]))}}return n.vertices=a,n.normals=c,d.length>0&&(n.colors=d),f.length>0&&(n.uvs=[f]),n.faces=h,n}};