THREE.ConvexGeometry=function(e){function t(t){var r=e[t].clone(),a=r.length();r.x+=a*o(),r.y+=a*o(),r.z+=a*o();for(var l=[],h=0;h<s.length;){var c=s[h];if(i(c,r)){for(var u=0;3>u;u++){for(var d=[c[u],c[(u+1)%3]],p=!0,f=0;f<l.length;f++)if(n(l[f],d)){l[f]=l[l.length-1],l.pop(),p=!1;break}p&&l.push(d)}s[h]=s[s.length-1],s.pop()}else h++}for(var f=0;f<l.length;f++)s.push([l[f][0],l[f][1],t])}function i(t,i){var n=e[t[0]],o=e[t[1]],a=e[t[2]],s=r(n,o,a),l=s.dot(n);return s.dot(i)>=l}function r(e,t,i){var r=new THREE.Vector3,n=new THREE.Vector3;return r.subVectors(i,t),n.subVectors(e,t),r.cross(n),r.normalize(),r}function n(e,t){return e[0]===t[1]&&e[1]===t[0]}function o(){return 1e-6*2*(Math.random()-.5)}function a(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var s=[[0,1,2],[0,2,1]],l=3;l<e.length;l++)t(l);for(var h=0,c=new Array(e.length),l=0;l<s.length;l++)for(var u=s[l],d=0;3>d;d++)void 0===c[u[d]]&&(c[u[d]]=h++,this.vertices.push(e[u[d]])),u[d]=c[u[d]];for(var l=0;l<s.length;l++)this.faces.push(new THREE.Face3(s[l][0],s[l][1],s[l][2]));for(var l=0;l<this.faces.length;l++){var u=this.faces[l];this.faceVertexUvs[0].push([a(this.vertices[u.a]),a(this.vertices[u.b]),a(this.vertices[u.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);