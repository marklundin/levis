THREE.ConvexGeometry=function(e){function t(t){var r=e[t].clone();var a=r.length();r.x+=a*o();r.y+=a*o();r.z+=a*o();var l=[];for(var h=0;h<s.length;){var c=s[h];if(i(c,r)){for(var u=0;3>u;u++){var f=[c[u],c[(u+1)%3]];var d=!0;for(var p=0;p<l.length;p++)if(n(l[p],f)){l[p]=l[l.length-1];l.pop();d=!1;break}if(d)l.push(f)}s[h]=s[s.length-1];s.pop()}else h++}for(var p=0;p<l.length;p++)s.push([l[p][0],l[p][1],t])}function i(t,i){var n=e[t[0]];var o=e[t[1]];var a=e[t[2]];var s=r(n,o,a);var l=s.dot(n);return s.dot(i)>=l}function r(e,t,i){var r=new THREE.Vector3;var n=new THREE.Vector3;r.subVectors(i,t);n.subVectors(e,t);r.cross(n);r.normalize();return r}function n(e,t){return e[0]===t[1]&&e[1]===t[0]}function o(){return 1e-6*2*(Math.random()-.5)}function a(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);var s=[[0,1,2],[0,2,1]];for(var l=3;l<e.length;l++)t(l);var h=0;var c=new Array(e.length);for(var l=0;l<s.length;l++){var u=s[l];for(var f=0;3>f;f++){if(void 0===c[u[f]]){c[u[f]]=h++;this.vertices.push(e[u[f]])}u[f]=c[u[f]]}}for(var l=0;l<s.length;l++)this.faces.push(new THREE.Face3(s[l][0],s[l][1],s[l][2]));for(var l=0;l<this.faces.length;l++){var u=this.faces[l];this.faceVertexUvs[0].push([a(this.vertices[u.a]),a(this.vertices[u.b]),a(this.vertices[u.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);