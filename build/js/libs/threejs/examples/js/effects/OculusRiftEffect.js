THREE.OculusRiftEffect=function(e,t){var i=t&&t.worldFactor?t.worldFactor:1,r=t&&t.HMD?t.HMD:{hResolution:1280,vResolution:800,hScreenSize:.14976,vScreenSize:.0936,interpupillaryDistance:.064,lensSeparationDistance:.064,eyeToScreenDistance:.041,distortionK:[1,.22,.24,0],chromaAbParameter:[.996,-.004,1.014,0]},o=new THREE.PerspectiveCamera;o.matrixAutoUpdate=!1,o.target=new THREE.Vector3;var n=new THREE.OrthographicCamera(-1,1,1,-1,1,1e3);n.position.z=1,this.preLeftRender=function(){},this.preRightRender=function(){},e.autoClear=!1;var a=new THREE.Color("black"),s={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},l=new THREE.WebGLRenderTarget(640,800,s),h=new THREE.ShaderMaterial({uniforms:{texid:{type:"t",value:l},scale:{type:"v2",value:new THREE.Vector2(1,1)},scaleIn:{type:"v2",value:new THREE.Vector2(1,1)},lensCenter:{type:"v2",value:new THREE.Vector2(0,0)},hmdWarpParam:{type:"v4",value:new THREE.Vector4(1,0,0,0)},chromAbParam:{type:"v4",value:new THREE.Vector4(1,0,0,0)}},vertexShader:["varying vec2 vUv;","void main() {"," vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 scale;","uniform vec2 scaleIn;","uniform vec2 lensCenter;","uniform vec4 hmdWarpParam;","uniform vec4 chromAbParam;","uniform sampler2D texid;","varying vec2 vUv;","void main()","{","  vec2 uv = (vUv*2.0)-1.0;","  vec2 theta = (uv-lensCenter)*scaleIn;","  float rSq = theta.x*theta.x + theta.y*theta.y;","  vec2 rvector = theta*(hmdWarpParam.x + hmdWarpParam.y*rSq + hmdWarpParam.z*rSq*rSq + hmdWarpParam.w*rSq*rSq*rSq);","  vec2 rBlue = rvector * (chromAbParam.z + chromAbParam.w * rSq);","  vec2 tcBlue = (lensCenter + scale * rBlue);","  tcBlue = (tcBlue+1.0)/2.0;","  if (any(bvec2(clamp(tcBlue, vec2(0.0,0.0), vec2(1.0,1.0))-tcBlue))) {","    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);","    return;}","  vec2 tcGreen = lensCenter + scale * rvector;","  tcGreen = (tcGreen+1.0)/2.0;","  vec2 rRed = rvector * (chromAbParam.x + chromAbParam.y * rSq);","  vec2 tcRed = lensCenter + scale * rRed;","  tcRed = (tcRed+1.0)/2.0;","  gl_FragColor = vec4(texture2D(texid, tcRed).r, texture2D(texid, tcGreen).g, texture2D(texid, tcBlue).b, 1);","}"].join("\n")}),c=new THREE.Mesh(new THREE.PlaneGeometry(2,2),h),u=new THREE.Scene;u.add(n),u.add(c);var d={},p={},f=1;this.setHMD=function(e){r=e;var t=r.hResolution/(2*r.vResolution),o=-1-4*(r.hScreenSize/4-r.lensSeparationDistance/2)/r.hScreenSize;f=r.distortionK[0]+r.distortionK[1]*Math.pow(o,2)+r.distortionK[2]*Math.pow(o,4)+r.distortionK[3]*Math.pow(o,6);var n=THREE.Math.radToDeg(2*Math.atan2(r.vScreenSize*f,2*r.eyeToScreenDistance)),a=(new THREE.Matrix4).makePerspective(n,t,.3,1e4),c=4*(r.hScreenSize/4-r.interpupillaryDistance/2)/r.hScreenSize;d.proj=(new THREE.Matrix4).makeTranslation(c,0,0).multiply(a),p.proj=(new THREE.Matrix4).makeTranslation(-c,0,0).multiply(a),d.tranform=(new THREE.Matrix4).makeTranslation(-i*r.interpupillaryDistance/2,0,0),p.tranform=(new THREE.Matrix4).makeTranslation(i*r.interpupillaryDistance/2,0,0),d.viewport=[0,0,r.hResolution/2,r.vResolution],p.viewport=[r.hResolution/2,0,r.hResolution/2,r.vResolution];var u=4*(r.hScreenSize/4-r.lensSeparationDistance/2)/r.hScreenSize;d.lensCenter=new THREE.Vector2(u,0),p.lensCenter=new THREE.Vector2(-u,0),h.uniforms.hmdWarpParam.value=new THREE.Vector4(r.distortionK[0],r.distortionK[1],r.distortionK[2],r.distortionK[3]),h.uniforms.chromAbParam.value=new THREE.Vector4(r.chromaAbParameter[0],r.chromaAbParameter[1],r.chromaAbParameter[2],r.chromaAbParameter[3]),h.uniforms.scaleIn.value=new THREE.Vector2(1,1/t),h.uniforms.scale.value=new THREE.Vector2(1/f,1*t/f),l&&l.dispose(),l=new THREE.WebGLRenderTarget(r.hResolution*f/2,r.vResolution*f,s),h.uniforms.texid.value=l},this.getHMD=function(){return r},this.setHMD(r),this.setSize=function(t,i){d.viewport=[t/2-r.hResolution/2,i/2-r.vResolution/2,r.hResolution/2,r.vResolution],p.viewport=[t/2,i/2-r.vResolution/2,r.hResolution/2,r.vResolution],e.setSize(t,i)},this.render=function(t,i){var r=e.getClearColor().clone();e.setClearColor(a),e.clear(),e.setClearColor(r),i.matrixAutoUpdate&&i.updateMatrix(),this.preLeftRender(),o.projectionMatrix.copy(d.proj),o.matrix.copy(i.matrix).multiply(d.tranform),o.matrixWorldNeedsUpdate=!0,e.setViewport(d.viewport[0],d.viewport[1],d.viewport[2],d.viewport[3]),h.uniforms.lensCenter.value=d.lensCenter,e.render(t,o,l,!0),e.render(u,n),this.preRightRender(),o.projectionMatrix.copy(p.proj),o.matrix.copy(i.matrix).multiply(p.tranform),o.matrixWorldNeedsUpdate=!0,e.setViewport(p.viewport[0],p.viewport[1],p.viewport[2],p.viewport[3]),h.uniforms.lensCenter.value=p.lensCenter,e.render(t,o,l,!0),e.render(u,n)},this.dispose=function(){h&&h.dispose(),l&&l.dispose()}};